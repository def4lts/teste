{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/smoke/\\xC1rea de Trabalho/dashgo/src/pages/dashboard.tsx\";\nimport { Flex, Box, Text, SimpleGrid, theme } from \"@chakra-ui/react\"; //import Chart from 'react-apexcharts'  //isso dá erro no React\n\nimport dynamic from \"next/dynamic\";\nimport { useEffect } from \"react\";\nimport { Header } from \"../components/Header\";\nimport { Sidebar } from \"../components/Sidebar\";\nimport { api } from \"../services/api\"; // Dessa forma, o Chart funciona no React, pois garante que será\n// renderizado no browser do cliente, e não no servidor Node.\n\nconst Chart = dynamic(() => import(\"react-apexcharts\"), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"react-apexcharts\")],\n    modules: [\"react-apexcharts\"]\n  }\n});\nconst tpData = \"datetime\";\nconst options = {\n  chart: {\n    toolbar: {\n      show: false\n    },\n    zoom: {\n      enabled: false\n    },\n    foreColor: theme.colors.gray[500]\n  },\n  grid: {\n    show: false\n  },\n  dataLabels: {\n    enabled: false\n  },\n  tooltip: {\n    enabled: false\n  },\n  xaxis: {\n    type: tpData,\n    axisBorder: {\n      color: theme.colors.gray[600]\n    },\n    axisTicks: {\n      color: theme.colors.gray[600]\n    },\n    categories: [\"2021-03-18T00:00:00.000Z\", \"2021-03-19T00:00:00.000Z\", \"2021-03-20T00:00:00.000Z\", \"2021-03-21T00:00:00.000Z\", \"2021-03-22T00:00:00.000Z\", \"2021-03-23T00:00:00.000Z\", \"2021-03-24T00:00:00.000Z\"]\n  },\n  fill: {\n    opacity: 0.3,\n    type: \"gradient\",\n    gradient: {\n      shade: \"dark\",\n      opacityFrom: 0.7,\n      opacityTo: 0.3\n    }\n  }\n};\nconst series1 = [{\n  name: \"series1\",\n  data: [31, 120, 10, 28, 61, 18, 109]\n}];\nconst series2 = [{\n  name: \"series2\",\n  data: [315, 120, 97, 28, 367, 98, 209]\n}];\nexport default function Dashboard() {\n  let user;\n  useEffect(() => {\n    api.get(\"/users/view\").then(response => console.log(response)).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    direction: \"column\",\n    h: \"100vh\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      w: \"100%\",\n      my: \"6\",\n      maxWidth: 1480,\n      mx: \"auto\",\n      px: \"6\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n        flex: \"1\",\n        gap: \"4\",\n        minChildWidth: \"320px\",\n        align: \"flex-start\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          p: [\"4\", \"8\"],\n          bg: \"gray.800\",\n          pb: \"4\",\n          borderRadius: 8,\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"lg\",\n            mb: \"4\",\n            children: \"Inscritos na semana\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Chart, {\n            options: options,\n            series: series1,\n            type: \"area\",\n            height: 160\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          p: [\"4\", \"8\"],\n          bg: \"gray.800\",\n          pb: \"4\",\n          borderRadius: 8,\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"lg\",\n            mb: \"4\",\n            children: \"Taxa de abertura\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Chart, {\n            options: options,\n            series: series2,\n            type: \"area\",\n            height: 160\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/smoke/Área de Trabalho/dashgo/src/pages/dashboard.tsx"],"names":["Flex","Box","Text","SimpleGrid","theme","dynamic","useEffect","Header","Sidebar","api","Chart","ssr","tpData","options","chart","toolbar","show","zoom","enabled","foreColor","colors","gray","grid","dataLabels","tooltip","xaxis","type","axisBorder","color","axisTicks","categories","fill","opacity","gradient","shade","opacityFrom","opacityTo","series1","name","data","series2","Dashboard","user","get","then","response","console","log","catch","err"],"mappings":"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","sourcesContent":["import { Flex, Box, Text, SimpleGrid, theme } from \"@chakra-ui/react\";\n//import Chart from 'react-apexcharts'  //isso dá erro no React\nimport dynamic from \"next/dynamic\";\nimport { useContext, useEffect } from \"react\";\n\nimport { Header } from \"../components/Header\";\nimport { Sidebar } from \"../components/Sidebar\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { api } from \"../services/api\";\n\n// Dessa forma, o Chart funciona no React, pois garante que será\n// renderizado no browser do cliente, e não no servidor Node.\nconst Chart = dynamic(() => import(\"react-apexcharts\"), { ssr: false });\n\ntype tpXaxis = \"category\" | \"datetime\" | \"numeric\";\nconst tpData: tpXaxis = \"datetime\";\n\nconst options = {\n  chart: {\n    toolbar: {\n      show: false,\n    },\n    zoom: {\n      enabled: false,\n    },\n    foreColor: theme.colors.gray[500],\n  },\n  grid: {\n    show: false,\n  },\n  dataLabels: {\n    enabled: false,\n  },\n  tooltip: {\n    enabled: false,\n  },\n  xaxis: {\n    type: tpData,\n    axisBorder: {\n      color: theme.colors.gray[600],\n    },\n    axisTicks: {\n      color: theme.colors.gray[600],\n    },\n    categories: [\n      \"2021-03-18T00:00:00.000Z\",\n      \"2021-03-19T00:00:00.000Z\",\n      \"2021-03-20T00:00:00.000Z\",\n      \"2021-03-21T00:00:00.000Z\",\n      \"2021-03-22T00:00:00.000Z\",\n      \"2021-03-23T00:00:00.000Z\",\n      \"2021-03-24T00:00:00.000Z\",\n    ],\n  },\n  fill: {\n    opacity: 0.3,\n    type: \"gradient\",\n    gradient: {\n      shade: \"dark\",\n      opacityFrom: 0.7,\n      opacityTo: 0.3,\n    },\n  },\n};\n\nconst series1 = [{ name: \"series1\", data: [31, 120, 10, 28, 61, 18, 109] }];\n\nconst series2 = [{ name: \"series2\", data: [315, 120, 97, 28, 367, 98, 209] }];\n\nexport default function Dashboard() {\n  let user: {};\n\n  useEffect(() => {\n    api\n      .get(\"/users/view\")\n      .then((response) => console.log(response))\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <Flex direction=\"column\" h=\"100vh\">\n      <Header />\n\n      <Flex w=\"100%\" my=\"6\" maxWidth={1480} mx=\"auto\" px=\"6\">\n        <Sidebar />\n\n        <SimpleGrid flex=\"1\" gap=\"4\" minChildWidth=\"320px\" align=\"flex-start\">\n          <Box p={[\"4\", \"8\"]} bg=\"gray.800\" pb=\"4\" borderRadius={8}>\n            <Text fontSize=\"lg\" mb=\"4\">\n              Inscritos na semana\n            </Text>\n            <Chart\n              options={options}\n              series={series1}\n              type=\"area\"\n              height={160}\n            />\n          </Box>\n          <Box p={[\"4\", \"8\"]} bg=\"gray.800\" pb=\"4\" borderRadius={8}>\n            <Text fontSize=\"lg\" mb=\"4\">\n              Taxa de abertura\n            </Text>\n            <Chart\n              options={options}\n              series={series2}\n              type=\"area\"\n              height={160}\n            />\n          </Box>\n        </SimpleGrid>\n      </Flex>\n    </Flex>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}