{"ast":null,"code":"import { useQuery } from \"react-query\";\nimport { api } from \"../api\";\n\nasync function getCategories() {\n  const {\n    data\n  } = await api.get(`/products/category`);\n  let categories = [];\n  categories.push(data);\n  categories = data.categories.map(category => {\n    return {\n      id: category.id,\n      name: category.name,\n      number: category.description,\n      created_at: new Date(category.created_at).toLocaleDateString(\"pt-BR\", {\n        day: \"2-digit\",\n        month: \"long\",\n        year: \"numeric\"\n      })\n    };\n  });\n  return {\n    categories\n  };\n}\n\nexport function useCategories() {\n  return useQuery([\"category\"], () => getCategories(), {\n    staleTime: 1000\n  });\n}","map":{"version":3,"sources":["/home/smoke/√Årea de Trabalho/dashgo/src/services/hooks/useCategories.ts"],"names":["useQuery","api","getCategories","data","get","categories","push","map","category","id","name","number","description","created_at","Date","toLocaleDateString","day","month","year","useCategories","staleTime"],"mappings":"AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,GAAT,QAAoB,QAApB;;AAaA,eAAeC,aAAf,GAA4D;AAC1D,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMF,GAAG,CAACG,GAAJ,CAAS,oBAAT,CAAvB;AAEA,MAAIC,UAAU,GAAG,EAAjB;AAEAA,EAAAA,UAAU,CAACC,IAAX,CAAgBH,IAAhB;AAEAE,EAAAA,UAAU,GAAGF,IAAI,CAACE,UAAL,CAAgBE,GAAhB,CAAqBC,QAAD,IAAwB;AACvD,WAAO;AACLC,MAAAA,EAAE,EAAED,QAAQ,CAACC,EADR;AAELC,MAAAA,IAAI,EAAEF,QAAQ,CAACE,IAFV;AAGLC,MAAAA,MAAM,EAAEH,QAAQ,CAACI,WAHZ;AAILC,MAAAA,UAAU,EAAE,IAAIC,IAAJ,CAASN,QAAQ,CAACK,UAAlB,EAA8BE,kBAA9B,CAAiD,OAAjD,EAA0D;AACpEC,QAAAA,GAAG,EAAE,SAD+D;AAEpEC,QAAAA,KAAK,EAAE,MAF6D;AAGpEC,QAAAA,IAAI,EAAE;AAH8D,OAA1D;AAJP,KAAP;AAUD,GAXY,CAAb;AAaA,SAAO;AACLb,IAAAA;AADK,GAAP;AAGD;;AAED,OAAO,SAASc,aAAT,GAAyB;AAC9B,SAAOnB,QAAQ,CAAC,CAAC,UAAD,CAAD,EAAe,MAAME,aAAa,EAAlC,EAAsC;AACnDkB,IAAAA,SAAS,EAAE;AADwC,GAAtC,CAAf;AAGD","sourcesContent":["import { useQuery } from \"react-query\";\nimport { api } from \"../api\";\n\ntype Category = {\n  id: string;\n  name: string;\n  description: string;\n  created_at: string;\n};\n\ntype CategoriesResponse = {\n  categories: Category[];\n};\n\nasync function getCategories(): Promise<CategoriesResponse> {\n  const { data } = await api.get(`/products/category`);\n\n  let categories = [];\n\n  categories.push(data);\n\n  categories = data.categories.map((category: Category) => {\n    return {\n      id: category.id,\n      name: category.name,\n      number: category.description,\n      created_at: new Date(category.created_at).toLocaleDateString(\"pt-BR\", {\n        day: \"2-digit\",\n        month: \"long\",\n        year: \"numeric\",\n      }),\n    };\n  });\n\n  return {\n    categories,\n  };\n}\n\nexport function useCategories() {\n  return useQuery([\"category\"], () => getCategories(), {\n    staleTime: 1000,\n  });\n}\n"]},"metadata":{},"sourceType":"module"}