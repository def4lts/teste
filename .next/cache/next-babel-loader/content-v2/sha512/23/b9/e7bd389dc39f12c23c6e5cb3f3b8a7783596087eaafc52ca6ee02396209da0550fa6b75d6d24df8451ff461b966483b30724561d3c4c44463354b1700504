{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/smoke/\\xC1rea de Trabalho/dashgo/src/components/Sidebar/NavLink.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { Text, Link as ChakraLink, Icon } from \"@chakra-ui/react\"; //import Link from 'next/link'\n\nimport { ActiveLink } from \"./ActiveLink\";\nexport function NavLink(_ref) {\n  let {\n    icon,\n    children,\n    href\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"icon\", \"children\", \"href\"]);\n\n  return /*#__PURE__*/_jsxDEV(ActiveLink, {\n    href: href,\n    passHref: true,\n    children: /*#__PURE__*/_jsxDEV(ChakraLink, _objectSpread(_objectSpread({\n      display: \"flex\",\n      align: \"center\"\n    }, rest), {}, {\n      href: href,\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        as: icon,\n        fontSize: \"20\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        ml: \"4\",\n        fontSize: \"30\",\n        fontWeight: \"medium\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/smoke/√Årea de Trabalho/dashgo/src/components/Sidebar/NavLink.tsx"],"names":["Text","Link","ChakraLink","Icon","ActiveLink","NavLink","icon","children","href","rest"],"mappings":";;;;;;;;;;;;;AACA,SACEA,IADF,EAEEC,IAAI,IAAIC,UAFV,EAGEC,IAHF,QAKO,kBALP,C,CAMA;;AACA,SAASC,UAAT,QAA2B,cAA3B;AAQA,OAAO,SAASC,OAAT,OAAkE;AAAA,MAAjD;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,GAAiD;AAAA,MAAtBC,IAAsB;;AACvE,sBACE,QAAC,UAAD;AAAY,IAAA,IAAI,EAAED,IAAlB;AAAwB,IAAA,QAAQ,MAAhC;AAAA,2BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,MAApB;AAA2B,MAAA,KAAK,EAAC;AAAjC,OAA8CC,IAA9C;AAAoD,MAAA,IAAI,EAAED,IAA1D;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAEF,IAAV;AAAgB,QAAA,QAAQ,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAa,QAAA,QAAQ,EAAC,IAAtB;AAA2B,QAAA,UAAU,EAAC,QAAtC;AAAA,kBACGC;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD","sourcesContent":["import { ElementType } from \"react\";\nimport {\n  Text,\n  Link as ChakraLink,\n  Icon,\n  LinkProps as ChakraLinkProps,\n} from \"@chakra-ui/react\";\n//import Link from 'next/link'\nimport { ActiveLink } from \"./ActiveLink\";\n\ninterface NavLinkProps extends ChakraLinkProps {\n  icon: ElementType;\n  children: string;\n  href: string;\n}\n\nexport function NavLink({ icon, children, href, ...rest }: NavLinkProps) {\n  return (\n    <ActiveLink href={href} passHref>\n      <ChakraLink display=\"flex\" align=\"center\" {...rest} href={href}>\n        <Icon as={icon} fontSize=\"20\" />\n        <Text ml=\"4\" fontSize=\"30\" fontWeight=\"medium\">\n          {children}\n        </Text>\n      </ChakraLink>\n    </ActiveLink>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}