{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/smoke/\\xC1rea de Trabalho/dashgo/src/components/Header/Profile.tsx\",\n    _s = $RefreshSig$();\n\nimport { Flex, Text, Box, Avatar } from \"@chakra-ui/react\";\nimport { useEffect } from \"react\";\nimport { api } from \"../../services/api\";\n// Só mostra o nome e e-mail se showName = true\nexport function Profile(_ref) {\n  _s();\n\n  var _ref$showName = _ref.showName,\n      showName = _ref$showName === void 0 ? true : _ref$showName;\n  var user = useEffect(function () {\n    api.get(\"/users/view\").then(function (response) {\n      return response;\n    })[\"catch\"](function (err) {\n      console.log(err);\n    });\n  }, []);\n  console.log(user);\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    align: \"center\",\n    children: [showName && /*#__PURE__*/_jsxDEV(Box, {\n      mr: \"4\",\n      textAlign: \"right\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        color: \"gray.300\",\n        fontSize: \"small\",\n        children: \"luiiz.silverio@gmail.com\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n      size: \"md\",\n      name: \"Luiz Oliveira\",\n      src: \"http://github.com/luiizsilverio.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n} // Flex é um container com display Flex\n// Stack é um container que permite espaçamento igual entre os componentes\n// HStack é um Stack com display inline-block\n// Box é uma div vazia\n// Avatar tem a vantagem de mostrar as iniciais, caso não tenha imagem\n\n_s(Profile, \"eo6ynmLzc32j2dncVM53Ab6Yk5M=\");\n\n_c = Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/smoke/Área de Trabalho/dashgo/src/components/Header/Profile.tsx"],"names":["Flex","Text","Box","Avatar","useEffect","api","Profile","showName","user","get","then","response","err","console","log"],"mappings":";;;;;AAAA,SAASA,IAAT,EAAeC,IAAf,EAAqBC,GAArB,EAA0BC,MAA1B,QAAwC,kBAAxC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,GAAT,QAAoB,oBAApB;AAYA;AAEA,OAAO,SAASC,OAAT,OAAoD;AAAA;;AAAA,2BAAjCC,QAAiC;AAAA,MAAjCA,QAAiC,8BAAtB,IAAsB;AACzD,MAAMC,IAAI,GAAGJ,SAAS,CAAC,YAAM;AAC3BC,IAAAA,GAAG,CACAI,GADH,CACO,aADP,EAEGC,IAFH,CAEQ,UAACC,QAAD;AAAA,aAAcA,QAAd;AAAA,KAFR,WAGS,UAACC,GAAD,EAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KALH;AAMD,GAPqB,EAOnB,EAPmB,CAAtB;AASAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACA,sBACE,QAAC,IAAD;AAAM,IAAA,KAAK,EAAC,QAAZ;AAAA,eACGD,QAAQ,iBACP,QAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAY,MAAA,SAAS,EAAC,OAAtB;AAAA,8BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAC,UAAZ;AAAuB,QAAA,QAAQ,EAAC,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAUE,QAAC,MAAD;AACE,MAAA,IAAI,EAAC,IADP;AAEE,MAAA,IAAI,EAAC,eAFP;AAGE,MAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,C,CAED;AACA;AACA;AACA;AACA;;GAnCgBD,O;;KAAAA,O","sourcesContent":["import { Flex, Text, Box, Avatar } from \"@chakra-ui/react\";\nimport { useEffect } from \"react\";\nimport { api } from \"../../services/api\";\n\ntype ProfileProps = {\n  showName?: boolean;\n};\n\ntype ProfileInfos = {\n  id: string;\n  name: string;\n  username: string;\n  avatarUrl: string;\n};\n// Só mostra o nome e e-mail se showName = true\n\nexport function Profile({ showName = true }: ProfileProps) {\n  const user = useEffect(() => {\n    api\n      .get(\"/users/view\")\n      .then((response) => response)\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  console.log(user);\n  return (\n    <Flex align=\"center\">\n      {showName && (\n        <Box mr=\"4\" textAlign=\"right\">\n          <Text>{}</Text>\n          <Text color=\"gray.300\" fontSize=\"small\">\n            luiiz.silverio@gmail.com\n          </Text>\n        </Box>\n      )}\n\n      <Avatar\n        size=\"md\"\n        name=\"Luiz Oliveira\"\n        src=\"http://github.com/luiizsilverio.png\"\n      />\n    </Flex>\n  );\n}\n\n// Flex é um container com display Flex\n// Stack é um container que permite espaçamento igual entre os componentes\n// HStack é um Stack com display inline-block\n// Box é uma div vazia\n// Avatar tem a vantagem de mostrar as iniciais, caso não tenha imagem\n"]},"metadata":{},"sourceType":"module"}