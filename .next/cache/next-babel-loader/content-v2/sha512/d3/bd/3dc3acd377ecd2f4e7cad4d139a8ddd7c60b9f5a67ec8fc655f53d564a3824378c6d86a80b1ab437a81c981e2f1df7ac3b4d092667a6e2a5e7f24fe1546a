{"ast":null,"code":"import axios from \"axios\";\nimport { parseCookies, setCookie } from \"nookies\";\nimport { signOut } from \"../contexts/AuthContext\";\nlet cookies = parseCookies();\nlet isRefreshing = false;\nlet failedRequestQueue = [];\nexport const api = axios.create({\n  baseURL: \"http://54.94.41.183:3333\",\n  headers: {\n    Authorization: `Bearer ${cookies[\"0dayTokenFront.token\"]}`\n  }\n});\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  if (error.response.status === 401) {\n    var _error$response$data;\n\n    if (((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.code) === \"token.expired\") {\n      cookies = parseCookies();\n      const {\n        \"0dayTokenFront.cookies\": refreshToken\n      } = cookies;\n      const originalConfig = error.config;\n\n      if (!isRefreshing) {\n        isRefreshing = true;\n        api.post(\"/refresh-token\", {\n          token: refreshToken\n        }).then(response => {\n          const {\n            token\n          } = response.data;\n          setCookie(undefined, \"0dayTokenFront.token\", token, {\n            maxAge: 60 * 60 * 24 * 30,\n            //30 days\n            path: \"/\"\n          });\n          setCookie(undefined, \"0dayTokenFront.refreshToken\", response.data.refreshToken, {\n            maxAge: 60 * 60 * 24 * 30,\n            //30 days\n            path: \"/\"\n          });\n          api.defaults.headers[\"Authorization\"] = `Bearer ${token}`;\n          failedRequestQueue.forEach(request => request.onSuccess(token));\n          failedRequestQueue = [];\n        }).catch(err => {\n          failedRequestQueue.forEach(request => request.onFailure(err));\n          failedRequestQueue = [];\n        }).finally(() => {\n          isRefreshing = false;\n        });\n      }\n\n      return new Promise((resolve, reject) => {\n        failedRequestQueue.push({\n          onSuccess: token => {\n            originalConfig.headers[\"Authorization\"] = `Bearer ${token}`;\n            resolve(api(originalConfig));\n          },\n          onFailure: err => {\n            reject(err);\n          }\n        });\n      });\n    } else {\n      signOut();\n    }\n  }\n\n  return Promise.reject();\n});","map":{"version":3,"sources":["/home/smoke/Área de Trabalho/dashgo/src/services/api.ts"],"names":["axios","parseCookies","setCookie","signOut","cookies","isRefreshing","failedRequestQueue","api","create","baseURL","headers","Authorization","interceptors","response","use","error","status","data","code","refreshToken","originalConfig","config","post","token","then","undefined","maxAge","path","defaults","forEach","request","onSuccess","catch","err","onFailure","finally","Promise","resolve","reject","push"],"mappings":"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","sourcesContent":["import axios, { AxiosError } from \"axios\";\nimport { destroyCookie, parseCookies, setCookie } from \"nookies\";\nimport { signOut } from \"../contexts/AuthContext\";\n\nlet cookies = parseCookies();\nlet isRefreshing = false;\nlet failedRequestQueue = [];\n\nexport const api = axios.create({\n  baseURL: \"http://54.94.41.183:3333\",\n  headers: {\n    Authorization: `Bearer ${cookies[\"0dayTokenFront.token\"]}`,\n  },\n});\n\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error: AxiosError) => {\n    if (error.response.status === 401) {\n      if (error.response.data?.code === \"token.expired\") {\n        cookies = parseCookies();\n\n        const { \"0dayTokenFront.cookies\": refreshToken } = cookies;\n        const originalConfig = error.config;\n\n        if (!isRefreshing) {\n          isRefreshing = true;\n\n          api\n            .post(\"/refresh-token\", {\n              token: refreshToken,\n            })\n            .then((response) => {\n              const { token } = response.data;\n\n              setCookie(undefined, \"0dayTokenFront.token\", token, {\n                maxAge: 60 * 60 * 24 * 30, //30 days\n                path: \"/\",\n              });\n\n              setCookie(\n                undefined,\n                \"0dayTokenFront.refreshToken\",\n                response.data.refreshToken,\n                {\n                  maxAge: 60 * 60 * 24 * 30, //30 days\n                  path: \"/\",\n                }\n              );\n\n              api.defaults.headers[\"Authorization\"] = `Bearer ${token}`;\n\n              failedRequestQueue.forEach((request) => request.onSuccess(token));\n              failedRequestQueue = [];\n            })\n            .catch((err) => {\n              failedRequestQueue.forEach((request) => request.onFailure(err));\n              failedRequestQueue = [];\n            })\n            .finally(() => {\n              isRefreshing = false;\n            });\n        }\n\n        return new Promise((resolve, reject) => {\n          failedRequestQueue.push({\n            onSuccess: (token: string) => {\n              originalConfig.headers[\"Authorization\"] = `Bearer ${token}`;\n\n              resolve(api(originalConfig));\n            },\n            onFailure: (err: AxiosError) => {\n              reject(err);\n            },\n          });\n        });\n      } else {\n        signOut();\n      }\n    }\n\n    return Promise.reject();\n  }\n);\n"]},"metadata":{},"sourceType":"module"}