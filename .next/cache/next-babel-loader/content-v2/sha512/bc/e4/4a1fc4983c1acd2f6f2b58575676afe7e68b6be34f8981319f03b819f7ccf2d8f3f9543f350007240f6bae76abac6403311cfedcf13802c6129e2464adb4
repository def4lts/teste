{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Flex, Text, Box, Avatar } from \"@chakra-ui/react\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../contexts/AuthContext\";\n// Só mostra o nome e e-mail se showName = true\nexport function Profile({\n  showName = true\n}) {\n  const {\n    user\n  } = useContext(AuthContext);\n  return /*#__PURE__*/_jsxs(Flex, {\n    align: \"center\",\n    children: [showName && /*#__PURE__*/_jsxs(Box, {\n      mr: \"4\",\n      textAlign: \"right\",\n      children: [/*#__PURE__*/_jsx(Text, {\n        children: user === null || user === void 0 ? void 0 : user.name\n      }), /*#__PURE__*/_jsx(Text, {\n        color: \"gray.300\",\n        fontSize: \"small\",\n        children: user === null || user === void 0 ? void 0 : user.username\n      })]\n    }), /*#__PURE__*/_jsx(Avatar, {\n      size: \"md\",\n      name: user === null || user === void 0 ? void 0 : user.name,\n      src: user === null || user === void 0 ? void 0 : user.avatarUrl\n    })]\n  });\n} // Flex é um container com display Flex\n// Stack é um container que permite espaçamento igual entre os componentes\n// HStack é um Stack com display inline-block\n// Box é uma div vazia\n// Avatar tem a vantagem de mostrar as iniciais, caso não tenha imagem","map":null,"metadata":{},"sourceType":"module"}