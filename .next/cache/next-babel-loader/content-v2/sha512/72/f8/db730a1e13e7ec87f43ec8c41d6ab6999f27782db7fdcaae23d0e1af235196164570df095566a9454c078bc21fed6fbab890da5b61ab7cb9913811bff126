{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/smoke/\\xC1rea de Trabalho/dashgo/src/contexts/AuthContext.tsx\";\nimport { createContext, useEffect, useState } from \"react\";\nimport { api } from \"../services/api\";\nimport Router from \"next/router\";\nimport { destroyCookie, parseCookies, setCookie } from \"nookies\";\nexport const AuthContext = /*#__PURE__*/createContext({});\nexport function signOut() {\n  destroyCookie(undefined, \"0dayTokenFront.token\");\n  destroyCookie(undefined, \"0dayTokenFront.refreshToken\");\n  Router.push(\"/\");\n}\nexport function AuthProvider({\n  children\n}) {\n  const {\n    0: user,\n    1: setUser\n  } = useState();\n  const isAuthenticated = !!user;\n  useEffect(() => {\n    const {\n      \"0dayTokenFront.token\": token\n    } = parseCookies();\n\n    if (token) {\n      api.get(\"/users/view\").then(response => {\n        const {\n          id,\n          name,\n          username,\n          avatarUrl\n        } = response.data;\n        setUser({\n          id,\n          name,\n          username,\n          avatarUrl\n        });\n      }).catch(() => {\n        signOut();\n      });\n    }\n  }, []);\n\n  async function signIn({\n    username,\n    password\n  }) {\n    try {\n      const response = await api.post(\"/sessions\", {\n        username,\n        password\n      });\n      const {\n        token,\n        refreshToken\n      } = response.data;\n      setCookie(undefined, \"0dayTokenFront.token\", token, {\n        maxAge: 60 * 60 * 24 * 30,\n        //30 days\n        path: \"/\"\n      });\n      setCookie(undefined, \"0dayTokenFront.refreshToken\", refreshToken, {\n        maxAge: 60 * 60 * 24 * 30,\n        //30 days\n        path: \"/\"\n      });\n      setUser({\n        username\n      });\n      api.defaults.headers[\"Authorization\"] = `Bearer ${token}`;\n      Router.push(\"/dashboard\");\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      signIn,\n      isAuthenticated,\n      user\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/smoke/√Årea de Trabalho/dashgo/src/contexts/AuthContext.tsx"],"names":["createContext","useEffect","useState","api","Router","destroyCookie","parseCookies","setCookie","AuthContext","signOut","undefined","push","AuthProvider","children","user","setUser","isAuthenticated","token","get","then","response","id","name","username","avatarUrl","data","catch","signIn","password","post","refreshToken","maxAge","path","defaults","headers","err","console","log"],"mappings":";;AAAA,SAASA,aAAT,EAAmCC,SAAnC,EAA8CC,QAA9C,QAA8D,OAA9D;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,aAAT,EAAwBC,YAAxB,EAAsCC,SAAtC,QAAuD,SAAvD;AAwBA,OAAO,MAAMC,WAAW,gBAAGR,aAAa,CAAC,EAAD,CAAjC;AAEP,OAAO,SAASS,OAAT,GAAmB;AACxBJ,EAAAA,aAAa,CAACK,SAAD,EAAY,sBAAZ,CAAb;AACAL,EAAAA,aAAa,CAACK,SAAD,EAAY,6BAAZ,CAAb;AAEAN,EAAAA,MAAM,CAACO,IAAP,CAAY,GAAZ;AACD;AAED,OAAO,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAuD;AAC5D,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBb,QAAQ,EAAhC;AAEA,QAAMc,eAAe,GAAG,CAAC,CAACF,IAA1B;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM;AAAE,8BAAwBgB;AAA1B,QAAoCX,YAAY,EAAtD;;AAEA,QAAIW,KAAJ,EAAW;AACTd,MAAAA,GAAG,CACAe,GADH,CACO,aADP,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,cAAM;AAAEC,UAAAA,EAAF;AAAMC,UAAAA,IAAN;AAAYC,UAAAA,QAAZ;AAAsBC,UAAAA;AAAtB,YAAoCJ,QAAQ,CAACK,IAAnD;AAEAV,QAAAA,OAAO,CAAC;AAAEM,UAAAA,EAAF;AAAMC,UAAAA,IAAN;AAAYC,UAAAA,QAAZ;AAAsBC,UAAAA;AAAtB,SAAD,CAAP;AACD,OANH,EAOGE,KAPH,CAOS,MAAM;AACXjB,QAAAA,OAAO;AACR,OATH;AAUD;AACF,GAfQ,EAeN,EAfM,CAAT;;AAiBA,iBAAekB,MAAf,CAAsB;AAAEJ,IAAAA,QAAF;AAAYK,IAAAA;AAAZ,GAAtB,EAA+D;AAC7D,QAAI;AACF,YAAMR,QAAQ,GAAG,MAAMjB,GAAG,CAAC0B,IAAJ,CAAS,WAAT,EAAsB;AAC3CN,QAAAA,QAD2C;AAE3CK,QAAAA;AAF2C,OAAtB,CAAvB;AAKA,YAAM;AAAEX,QAAAA,KAAF;AAASa,QAAAA;AAAT,UAA0BV,QAAQ,CAACK,IAAzC;AAEAlB,MAAAA,SAAS,CAACG,SAAD,EAAY,sBAAZ,EAAoCO,KAApC,EAA2C;AAClDc,QAAAA,MAAM,EAAE,KAAK,EAAL,GAAU,EAAV,GAAe,EAD2B;AACvB;AAC3BC,QAAAA,IAAI,EAAE;AAF4C,OAA3C,CAAT;AAKAzB,MAAAA,SAAS,CAACG,SAAD,EAAY,6BAAZ,EAA2CoB,YAA3C,EAAyD;AAChEC,QAAAA,MAAM,EAAE,KAAK,EAAL,GAAU,EAAV,GAAe,EADyC;AACrC;AAC3BC,QAAAA,IAAI,EAAE;AAF0D,OAAzD,CAAT;AAKAjB,MAAAA,OAAO,CAAC;AAAEQ,QAAAA;AAAF,OAAD,CAAP;AAEApB,MAAAA,GAAG,CAAC8B,QAAJ,CAAaC,OAAb,CAAqB,eAArB,IAAyC,UAASjB,KAAM,EAAxD;AAEAb,MAAAA,MAAM,CAACO,IAAP,CAAY,YAAZ;AACD,KAvBD,CAuBE,OAAOwB,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF;;AACD,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAER,MAAAA,MAAF;AAAUX,MAAAA,eAAV;AAA2BF,MAAAA;AAA3B,KAA7B;AAAA,cACGD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD","sourcesContent":["import { createContext, ReactNode, useEffect, useState } from \"react\";\nimport { api } from \"../services/api\";\nimport Router from \"next/router\";\nimport { destroyCookie, parseCookies, setCookie } from \"nookies\";\n\ntype User = {\n  id?: string;\n  name?: string;\n  username: string;\n  avatarUrl?: string;\n};\n\ntype SignCredentials = {\n  username: string;\n  password: string;\n};\n\ntype AuthContextData = {\n  signIn(credentials: SignCredentials): Promise<void>;\n  user: User;\n  isAuthenticated: boolean;\n};\n\ntype AuthProviderProps = {\n  children: ReactNode;\n};\n\nexport const AuthContext = createContext({} as AuthContextData);\n\nexport function signOut() {\n  destroyCookie(undefined, \"0dayTokenFront.token\");\n  destroyCookie(undefined, \"0dayTokenFront.refreshToken\");\n\n  Router.push(\"/\");\n}\n\nexport function AuthProvider({ children }: AuthProviderProps) {\n  const [user, setUser] = useState<User>();\n\n  const isAuthenticated = !!user;\n\n  useEffect(() => {\n    const { \"0dayTokenFront.token\": token } = parseCookies();\n\n    if (token) {\n      api\n        .get(\"/users/view\")\n        .then((response) => {\n          const { id, name, username, avatarUrl } = response.data;\n\n          setUser({ id, name, username, avatarUrl });\n        })\n        .catch(() => {\n          signOut();\n        });\n    }\n  }, []);\n\n  async function signIn({ username, password }: SignCredentials) {\n    try {\n      const response = await api.post(\"/sessions\", {\n        username,\n        password,\n      });\n\n      const { token, refreshToken } = response.data;\n\n      setCookie(undefined, \"0dayTokenFront.token\", token, {\n        maxAge: 60 * 60 * 24 * 30, //30 days\n        path: \"/\",\n      });\n\n      setCookie(undefined, \"0dayTokenFront.refreshToken\", refreshToken, {\n        maxAge: 60 * 60 * 24 * 30, //30 days\n        path: \"/\",\n      });\n\n      setUser({ username });\n\n      api.defaults.headers[\"Authorization\"] = `Bearer ${token}`;\n\n      Router.push(\"/dashboard\");\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  return (\n    <AuthContext.Provider value={{ signIn, isAuthenticated, user }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}