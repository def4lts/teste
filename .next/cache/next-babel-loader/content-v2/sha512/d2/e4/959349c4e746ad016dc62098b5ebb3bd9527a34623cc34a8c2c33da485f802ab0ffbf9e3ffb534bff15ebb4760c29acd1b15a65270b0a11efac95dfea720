{"ast":null,"code":"import _regeneratorRuntime from \"/home/smoke/\\xC1rea de Trabalho/dashgo/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"/home/smoke/\\xC1rea de Trabalho/dashgo/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/smoke/\\xC1rea de Trabalho/dashgo/src/contexts/AuthContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { api } from \"../services/api\";\nexport var AuthContext = /*#__PURE__*/createContext({});\nexport function AuthProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(),\n      username = _useState[0],\n      setUser = _useState[1];\n\n  var isAuthenticated = false;\n\n  function signIn(_x) {\n    return _signIn.apply(this, arguments);\n  }\n\n  function _signIn() {\n    _signIn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n      var username, password, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              username = _ref2.username, password = _ref2.password;\n              _context.prev = 1;\n              _context.next = 4;\n              return api.post(\"sessions\", {\n                username: username,\n                password: password\n              });\n\n            case 4:\n              response = _context.sent;\n              setUser({\n                username: username\n              });\n              console.log(response.data);\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9]]);\n    }));\n    return _signIn.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      signIn: signIn,\n      isAuthenticated: isAuthenticated\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuthProvider, \"BXckxUeNjpivu55cfI4gqS3mJvI=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/smoke/√Årea de Trabalho/dashgo/src/contexts/AuthContext.tsx"],"names":["createContext","useState","api","AuthContext","AuthProvider","children","username","setUser","isAuthenticated","signIn","password","post","response","console","log","data"],"mappings":";;;;;;;AAAA,SAASA,aAAT,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,GAAT,QAAoB,iBAApB;AAoBA,OAAO,IAAMC,WAAW,gBAAGH,aAAa,CAAC,EAAD,CAAjC;AAEP,OAAO,SAASI,YAAT,OAAuD;AAAA;;AAAA,MAA/BC,QAA+B,QAA/BA,QAA+B;;AAAA,kBAChCJ,QAAQ,EADwB;AAAA,MACrDK,QADqD;AAAA,MAC3CC,OAD2C;;AAG5D,MAAMC,eAAe,GAAG,KAAxB;;AAH4D,WAK7CC,MAL6C;AAAA;AAAA;;AAAA;AAAA,uEAK5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwBH,cAAAA,QAAxB,SAAwBA,QAAxB,EAAkCI,QAAlC,SAAkCA,QAAlC;AAAA;AAAA;AAAA,qBAE2BR,GAAG,CAACS,IAAJ,CAAS,UAAT,EAAqB;AAC1CL,gBAAAA,QAAQ,EAARA,QAD0C;AAE1CI,gBAAAA,QAAQ,EAARA;AAF0C,eAArB,CAF3B;;AAAA;AAEUE,cAAAA,QAFV;AAOIL,cAAAA,OAAO,CAAC;AAAED,gBAAAA,QAAQ,EAARA;AAAF,eAAD,CAAP;AAEAO,cAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AATJ;AAAA;;AAAA;AAAA;AAAA;AAWIF,cAAAA,OAAO,CAACC,GAAR;;AAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAL4D;AAAA;AAAA;;AAmB5D,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEL,MAAAA,MAAM,EAANA,MAAF;AAAUD,MAAAA,eAAe,EAAfA;AAAV,KAA7B;AAAA,cACGH;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAxBeD,Y;;KAAAA,Y","sourcesContent":["import { createContext, ReactNode, useState } from \"react\";\nimport { api } from \"../services/api\";\n\ntype User = {\n  username: string;\n};\n\ntype SignCredentials = {\n  username: string;\n  password: string;\n};\n\ntype AuthContextData = {\n  signIn(credentials: SignCredentials): Promise<void>;\n  isAuthenticated: boolean;\n};\n\ntype AuthProviderProps = {\n  children: ReactNode;\n};\n\nexport const AuthContext = createContext({} as AuthContextData);\n\nexport function AuthProvider({ children }: AuthProviderProps) {\n  const [username, setUser] = useState<User>();\n\n  const isAuthenticated = false;\n\n  async function signIn({ username, password }: SignCredentials) {\n    try {\n      const response = await api.post(\"sessions\", {\n        username,\n        password,\n      });\n\n      setUser({ username });\n\n      console.log(response.data);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  return (\n    <AuthContext.Provider value={{ signIn, isAuthenticated }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}