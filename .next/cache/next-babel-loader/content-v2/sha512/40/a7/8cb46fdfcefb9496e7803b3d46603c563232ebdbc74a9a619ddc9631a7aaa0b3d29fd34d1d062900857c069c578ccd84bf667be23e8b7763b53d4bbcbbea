{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useState } from \"react\";\nimport { Box, Flex, Button, Heading, Icon, Spinner } from \"@chakra-ui/react\";\nimport { Link, Table, Thead, Tbody, Tr, Th, Td } from \"@chakra-ui/react\";\nimport { Checkbox, Text, useBreakpointValue } from \"@chakra-ui/react\";\nimport { RiPencilLine } from \"react-icons/ri\";\nimport { Header } from \"../../components/Header\";\nimport { Sidebar } from \"../../components/Sidebar\";\nimport { Pagination } from \"../../components/Pagination\";\nimport { useClients } from \"../../services/hooks/useClients\";\nimport { queryClient } from \"../../services/queryClient\";\nimport { api } from \"../../services/api\";\nexport default function UserList() {\n  const {\n    0: curPage,\n    1: setCurPage\n  } = useState(1); // isLoading Ã© o 1.o carregamento dos dados\n\n  const {\n    data,\n    isLoading,\n    isFetching,\n    error\n  } = useClients(curPage);\n  const isTelaGrande = useBreakpointValue({\n    base: false,\n    lg: true\n  });\n\n  async function handlePrefetchClient() {\n    await queryClient.prefetchQuery([\"user\"], async () => {\n      const response = await api.get(`/clients`);\n      return response.data;\n    }, {\n      staleTime: 1000 * 60 * 10 // 10 minutos\n\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(Box, {\n    children: [/*#__PURE__*/_jsx(Header, {}), /*#__PURE__*/_jsxs(Flex, {\n      w: \"100%\",\n      my: \"6\",\n      maxWidth: 1480,\n      mx: \"auto\",\n      px: \"6\",\n      children: [/*#__PURE__*/_jsx(Sidebar, {}), /*#__PURE__*/_jsxs(Box, {\n        flex: \"1\",\n        borderRadius: 8,\n        bg: \"gray.800\",\n        p: \"8\",\n        children: [/*#__PURE__*/_jsx(Flex, {\n          mb: \"8\",\n          justifyContent: \"space-between\",\n          align: \"center\",\n          children: /*#__PURE__*/_jsxs(Heading, {\n            size: \"lg\",\n            fontWeight: \"normal\",\n            children: [\"Clientes\", !isLoading && isFetching && /*#__PURE__*/_jsx(Spinner, {\n              color: \"gray.500\",\n              ml: \"4\"\n            })]\n          })\n        }), isLoading ? /*#__PURE__*/_jsx(Flex, {\n          justify: \"center\",\n          children: /*#__PURE__*/_jsx(Spinner, {})\n        }) : error ? /*#__PURE__*/_jsx(Flex, {\n          justify: \"center\",\n          children: /*#__PURE__*/_jsx(Text, {\n            children: \"Falha ao obter dados dos usu\\xE1rios\"\n          })\n        }) : /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsxs(Table, {\n            colorScheme: \"whiteAlpha\",\n            children: [/*#__PURE__*/_jsx(Thead, {\n              children: /*#__PURE__*/_jsxs(Tr, {\n                children: [/*#__PURE__*/_jsx(Th, {\n                  px: [\"4\", \"4\", \"6\"],\n                  color: \"gray.300\",\n                  width: \"8\",\n                  children: /*#__PURE__*/_jsx(Checkbox, {\n                    colorScheme: \"messenger\"\n                  })\n                }), /*#__PURE__*/_jsx(Th, {\n                  children: \"Usu\\xE1rio\"\n                }), isTelaGrande && /*#__PURE__*/_jsx(Th, {\n                  children: \"Compras\"\n                }), isTelaGrande && /*#__PURE__*/_jsx(Th, {\n                  children: \"Trocas\"\n                }), isTelaGrande && /*#__PURE__*/_jsx(Th, {\n                  children: \"Data de cadastro\"\n                }), /*#__PURE__*/_jsx(Th, {\n                  width: \"8\"\n                })]\n              })\n            }), /*#__PURE__*/_jsx(Tbody, {\n              children: data.clients.map(client => /*#__PURE__*/_jsxs(Tr, {\n                children: [/*#__PURE__*/_jsx(Td, {\n                  px: [\"4\", \"4\", \"6\"],\n                  children: /*#__PURE__*/_jsx(Checkbox, {\n                    colorScheme: \"messenger\"\n                  })\n                }), /*#__PURE__*/_jsx(Td, {\n                  children: /*#__PURE__*/_jsxs(Box, {\n                    children: [/*#__PURE__*/_jsx(Link, {\n                      color: \"messenger.100\",\n                      onMouseEnter: () => handlePrefetchClient(),\n                      children: /*#__PURE__*/_jsx(Text, {\n                        fontWeight: \"bold\",\n                        children: client.name\n                      })\n                    }), /*#__PURE__*/_jsx(Text, {\n                      fontSize: \"sm\",\n                      color: \"gray.300\",\n                      children: client.number\n                    })]\n                  })\n                }), isTelaGrande && /*#__PURE__*/_jsx(Td, {\n                  children: \"0\"\n                }), isTelaGrande && /*#__PURE__*/_jsx(Td, {\n                  children: \"0\"\n                }), isTelaGrande && /*#__PURE__*/_jsx(Td, {\n                  children: client.created_at\n                }), /*#__PURE__*/_jsx(Td, {\n                  children: /*#__PURE__*/_jsx(Button, {\n                    as: \"a\",\n                    size: \"sm\",\n                    fontSize: \"sm\",\n                    colorScheme: \"green\",\n                    leftIcon: /*#__PURE__*/_jsx(Icon, {\n                      as: RiPencilLine,\n                      fontSize: \"16\"\n                    }),\n                    children: isTelaGrande ? \"Editar\" : \"\"\n                  })\n                })]\n              }, client.id))\n            })]\n          }), /*#__PURE__*/_jsx(Pagination, {\n            totalCountOfRegisters: data.totalCount,\n            currentPage: curPage,\n            onPageChange: setCurPage\n          })]\n        })]\n      })]\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}