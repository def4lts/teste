{"ast":null,"code":"import _regeneratorRuntime from \"/home/smoke/\\xC1rea de Trabalho/dashgo/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/smoke/\\xC1rea de Trabalho/dashgo/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport { useQuery } from \"react-query\";\nimport { api } from \"../api\";\n\nfunction getCategories() {\n  return _getCategories.apply(this, arguments);\n}\n\nfunction _getCategories() {\n  _getCategories = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var _yield$api$get, data, categories;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return api.get(\"/products/category\");\n\n          case 2:\n            _yield$api$get = _context.sent;\n            data = _yield$api$get.data;\n            categories = [];\n            categories.push(data);\n            categories = data.categories.map(function (category) {\n              return {\n                id: category.id,\n                name: category.name,\n                number: category.description,\n                created_at: new Date(category.created_at).toLocaleDateString(\"pt-BR\", {\n                  day: \"2-digit\",\n                  month: \"long\",\n                  year: \"numeric\"\n                })\n              };\n            });\n            return _context.abrupt(\"return\", {\n              categories: categories\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getCategories.apply(this, arguments);\n}\n\nexport function useCategories() {\n  _s();\n\n  return useQuery([\"category\"], function () {\n    return getCategories();\n  }, {\n    staleTime: 1000\n  });\n}\n\n_s(useCategories, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"sources":["/home/smoke/√Årea de Trabalho/dashgo/src/services/hooks/useCategories.ts"],"names":["useQuery","api","getCategories","get","data","categories","push","map","category","id","name","number","description","created_at","Date","toLocaleDateString","day","month","year","useCategories","staleTime"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,GAAT,QAAoB,QAApB;;SAaeC,a;;;;;4EAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACyBD,GAAG,CAACE,GAAJ,sBADzB;;AAAA;AAAA;AACUC,YAAAA,IADV,kBACUA,IADV;AAGMC,YAAAA,UAHN,GAGmB,EAHnB;AAKEA,YAAAA,UAAU,CAACC,IAAX,CAAgBF,IAAhB;AAEAC,YAAAA,UAAU,GAAGD,IAAI,CAACC,UAAL,CAAgBE,GAAhB,CAAoB,UAACC,QAAD,EAAwB;AACvD,qBAAO;AACLC,gBAAAA,EAAE,EAAED,QAAQ,CAACC,EADR;AAELC,gBAAAA,IAAI,EAAEF,QAAQ,CAACE,IAFV;AAGLC,gBAAAA,MAAM,EAAEH,QAAQ,CAACI,WAHZ;AAILC,gBAAAA,UAAU,EAAE,IAAIC,IAAJ,CAASN,QAAQ,CAACK,UAAlB,EAA8BE,kBAA9B,CAAiD,OAAjD,EAA0D;AACpEC,kBAAAA,GAAG,EAAE,SAD+D;AAEpEC,kBAAAA,KAAK,EAAE,MAF6D;AAGpEC,kBAAAA,IAAI,EAAE;AAH8D,iBAA1D;AAJP,eAAP;AAUD,aAXY,CAAb;AAPF,6CAoBS;AACLb,cAAAA,UAAU,EAAVA;AADK,aApBT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAyBA,OAAO,SAASc,aAAT,GAAyB;AAAA;;AAC9B,SAAOnB,QAAQ,CAAC,CAAC,UAAD,CAAD,EAAe;AAAA,WAAME,aAAa,EAAnB;AAAA,GAAf,EAAsC;AACnDkB,IAAAA,SAAS,EAAE;AADwC,GAAtC,CAAf;AAGD;;GAJeD,a;UACPnB,Q","sourcesContent":["import { useQuery } from \"react-query\";\nimport { api } from \"../api\";\n\ntype Category = {\n  id: string;\n  name: string;\n  description: string;\n  created_at: string;\n};\n\ntype CategoriesResponse = {\n  categories: Category[];\n};\n\nasync function getCategories(): Promise<CategoriesResponse> {\n  const { data } = await api.get(`/products/category`);\n\n  let categories = [];\n\n  categories.push(data);\n\n  categories = data.categories.map((category: Category) => {\n    return {\n      id: category.id,\n      name: category.name,\n      number: category.description,\n      created_at: new Date(category.created_at).toLocaleDateString(\"pt-BR\", {\n        day: \"2-digit\",\n        month: \"long\",\n        year: \"numeric\",\n      }),\n    };\n  });\n\n  return {\n    categories,\n  };\n}\n\nexport function useCategories() {\n  return useQuery([\"category\"], () => getCategories(), {\n    staleTime: 1000,\n  });\n}\n"]},"metadata":{},"sourceType":"module"}