{"ast":null,"code":"import _regeneratorRuntime from \"/home/smoke/\\xC1rea de Trabalho/dashgo/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"/home/smoke/\\xC1rea de Trabalho/dashgo/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/smoke/\\xC1rea de Trabalho/dashgo/src/contexts/AuthContext.tsx\";\nimport { createContext } from \"react\";\nimport { api } from \"../services/api\";\nexport var AuthContext = /*#__PURE__*/createContext({});\nexport function AuthProvider(_ref) {\n  var children = _ref.children;\n  var isAuthenticated = false;\n\n  function signIn(_x) {\n    return _signIn.apply(this, arguments);\n  }\n\n  function _signIn() {\n    _signIn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n      var email, password, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              email = _ref2.email, password = _ref2.password;\n              _context.next = 3;\n              return api.post(\"sessions\", {\n                email: email,\n                password: password\n              });\n\n            case 3:\n              response = _context.sent;\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _signIn.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      signIn: signIn,\n      isAuthenticated: isAuthenticated\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/smoke/√Årea de Trabalho/dashgo/src/contexts/AuthContext.tsx"],"names":["createContext","api","AuthContext","AuthProvider","children","isAuthenticated","signIn","email","password","post","response"],"mappings":";;;;AAAA,SAASA,aAAT,QAAyC,OAAzC;AACA,SAASC,GAAT,QAAoB,iBAApB;AAgBA,OAAO,IAAMC,WAAW,gBAAGF,aAAa,CAAC,EAAD,CAAjC;AAEP,OAAO,SAASG,YAAT,OAAuD;AAAA,MAA/BC,QAA+B,QAA/BA,QAA+B;AAC5D,MAAMC,eAAe,GAAG,KAAxB;;AAD4D,WAG7CC,MAH6C;AAAA;AAAA;;AAAA;AAAA,uEAG5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwBC,cAAAA,KAAxB,SAAwBA,KAAxB,EAA+BC,QAA/B,SAA+BA,QAA/B;AAAA;AAAA,qBACyBP,GAAG,CAACQ,IAAJ,CAAS,UAAT,EAAqB;AAC1CF,gBAAAA,KAAK,EAALA,KAD0C;AAE1CC,gBAAAA,QAAQ,EAARA;AAF0C,eAArB,CADzB;;AAAA;AACQE,cAAAA,QADR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAH4D;AAAA;AAAA;;AAS5D,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEJ,MAAAA,MAAM,EAANA,MAAF;AAAUD,MAAAA,eAAe,EAAfA;AAAV,KAA7B;AAAA,cACGD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;KAdeD,Y","sourcesContent":["import { createContext, ReactNode } from \"react\";\nimport { api } from \"../services/api\";\n\ntype SignCredentials = {\n  email: string;\n  password: string;\n};\n\ntype AuthContextData = {\n  signIn(credentials: SignCredentials): Promise<void>;\n  isAuthenticated: boolean;\n};\n\ntype AuthProviderProps = {\n  children: ReactNode;\n};\n\nexport const AuthContext = createContext({} as AuthContextData);\n\nexport function AuthProvider({ children }: AuthProviderProps) {\n  const isAuthenticated = false;\n\n  async function signIn({ email, password }: SignCredentials) {\n    const response = await api.post(\"sessions\", {\n      email,\n      password,\n    });\n  }\n  return (\n    <AuthContext.Provider value={{ signIn, isAuthenticated }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}