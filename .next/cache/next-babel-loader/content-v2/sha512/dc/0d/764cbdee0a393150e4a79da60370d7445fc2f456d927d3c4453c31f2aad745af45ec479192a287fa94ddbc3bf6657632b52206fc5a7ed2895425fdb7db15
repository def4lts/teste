{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/smoke/\\xC1rea de Trabalho/dashgo/src/components/Form/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Button, Flex, Stack, Text, useBreakpointValue } from \"@chakra-ui/react\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { Input } from \"./Input\";\nimport { useForm } from \"react-hook-form\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../contexts/AuthContext\";\nconst Empresa = \"<Zero Day />\";\nconst SignInForSchema = yup.object().shape({\n  username: yup.string().required(\"Usuário obrigatório\"),\n  password: yup.string().required(\"Senha obrigatória\").min(6, \"Digite ao menos 6 letras ou números\")\n});\nexport function Form() {\n  const isWideVersion = useBreakpointValue({\n    base: false,\n    lg: true\n  });\n  const {\n    register,\n    handleSubmit,\n    formState\n  } = useForm({\n    resolver: yupResolver(SignInForSchema)\n  });\n  const errors = formState.errors;\n  console.log(errors);\n  const {\n    signIn\n  } = useContext(AuthContext);\n\n  async function handleSignIn(values) {\n    await signIn(values);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    as: \"form\",\n    width: \"100%\",\n    maxWidth: 360,\n    p: \"8\",\n    border: 15,\n    borderColor: \"gray.50\",\n    borderRadius: 25,\n    flexDir: \"column\",\n    onSubmit: handleSubmit(handleSignIn),\n    zIndex: 3,\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      spacing: \"6\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        zIndex: 2,\n        fontSize: \"5xl\",\n        align: \"center\",\n        children: Empresa\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, _objectSpread({\n        name: \"username\",\n        type: \"text\",\n        label: \"Usu\\xE1rio\",\n        error: errors.username\n      }, register(\"username\")), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, _objectSpread({\n        name: \"password\",\n        type: \"password\",\n        label: \"Senha\",\n        error: errors.password\n      }, register(\"password\")), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      mt: \"6\",\n      variant: \"transparent\",\n      border: \"2px\",\n      borderColor: \"green.900\",\n      size: \"lg\",\n      isLoading: formState.isSubmitting,\n      children: \"Entrar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/smoke/Área de Trabalho/dashgo/src/components/Form/index.tsx"],"names":["Button","Flex","Stack","Text","useBreakpointValue","yup","yupResolver","Input","useForm","useContext","AuthContext","Empresa","SignInForSchema","object","shape","username","string","required","password","min","Form","isWideVersion","base","lg","register","handleSubmit","formState","resolver","errors","console","log","signIn","handleSignIn","values","isSubmitting"],"mappings":"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","sourcesContent":["import {\n  Button,\n  Flex,\n  Stack,\n  Text,\n  useBreakpointValue,\n} from \"@chakra-ui/react\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { Input } from \"./Input\";\nimport { SubmitHandler, useForm } from \"react-hook-form\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../contexts/AuthContext\";\n\nconst Empresa = \"<Zero Day />\";\n\ntype SignInFormData = {\n  username: string;\n  password: string;\n};\n\nconst SignInForSchema = yup.object().shape({\n  username: yup.string().required(\"Usuário obrigatório\"),\n  password: yup\n    .string()\n    .required(\"Senha obrigatória\")\n    .min(6, \"Digite ao menos 6 letras ou números\"),\n});\n\nexport function Form() {\n  const isWideVersion = useBreakpointValue({\n    base: false,\n    lg: true,\n  });\n\n  const { register, handleSubmit, formState } = useForm({\n    resolver: yupResolver(SignInForSchema),\n  });\n\n  const errors = formState.errors;\n\n  console.log(errors);\n\n  const { signIn } = useContext(AuthContext);\n\n  async function handleSignIn(values: SignInFormData) {\n    await signIn(values);\n  }\n\n  return (\n    <Flex\n      as=\"form\"\n      width=\"100%\"\n      maxWidth={360}\n      p=\"8\"\n      border={15}\n      borderColor=\"gray.50\"\n      borderRadius={25}\n      flexDir=\"column\"\n      onSubmit={handleSubmit(handleSignIn)}\n      zIndex={3}\n    >\n      <Stack spacing=\"6\">\n        <Text zIndex={2} fontSize=\"5xl\" align=\"center\">\n          {Empresa}\n        </Text>\n        <br />\n        <br />\n        <Input\n          name=\"username\"\n          type=\"text\"\n          label=\"Usuário\"\n          error={errors.username}\n          {...register(\"username\")}\n        />\n        <Input\n          name=\"password\"\n          type=\"password\"\n          label=\"Senha\"\n          error={errors.password}\n          {...register(\"password\")}\n        />\n      </Stack>\n      <br />\n      <br />\n      <Button\n        type=\"submit\"\n        mt=\"6\"\n        variant=\"transparent\"\n        border=\"2px\"\n        borderColor=\"green.900\"\n        size=\"lg\"\n        isLoading={formState.isSubmitting}\n      >\n        Entrar\n      </Button>\n    </Flex>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}