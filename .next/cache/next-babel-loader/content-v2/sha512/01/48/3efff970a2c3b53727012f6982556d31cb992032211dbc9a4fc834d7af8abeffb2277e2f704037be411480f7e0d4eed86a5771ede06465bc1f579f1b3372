{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _defineProperty from \"/home/smoke/\\xC1rea de Trabalho/dashgo/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _objectWithoutProperties from \"/home/smoke/\\xC1rea de Trabalho/dashgo/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { forwardRef } from \"react\";\nimport { Input as ChakraInput, FormLabel, FormControl } from \"@chakra-ui/react\";\nimport { FormErrorMessage } from \"@chakra-ui/react\";\n\nvar InputBase = function InputBase(_ref, ref) {\n  var label = _ref.label,\n      name = _ref.name,\n      _ref$error = _ref.error,\n      error = _ref$error === void 0 ? null : _ref$error,\n      rest = _objectWithoutProperties(_ref, [\"label\", \"name\", \"error\"]);\n\n  return /*#__PURE__*/_jsxs(FormControl, {\n    isInvalid: !!error,\n    children: [!label || /*#__PURE__*/_jsx(FormLabel, {\n      color: \"gray.200\",\n      htmlFor: name,\n      children: label\n    }), /*#__PURE__*/_jsx(ChakraInput, _objectSpread({\n      name: name,\n      id: name,\n      color: \"gray.400\",\n      borderColor: \"green.50\",\n      border: \"2px\",\n      borderRadius: \"50\",\n      focusBorderColor: \"green.800\",\n      size: \"lg\",\n      _hover: {\n        bgColor: \"brand.50\"\n      },\n      ref: ref\n    }, rest)), !!error && /*#__PURE__*/_jsx(FormErrorMessage, {\n      children: error.message\n    })]\n  });\n};\n\nexport var Input = /*#__PURE__*/forwardRef(InputBase);","map":null,"metadata":{},"sourceType":"module"}