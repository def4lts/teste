{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/smoke/\\xC1rea de Trabalho/dashgo/src/components/FormLogin/Matrix.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef } from \"react\";\nexport function Matrix(_ref) {\n  _s();\n\n  var _ref$timeout = _ref.timeout,\n      timeout = _ref$timeout === void 0 ? 50 : _ref$timeout;\n  var canvasRef = useRef(null);\n  useEffect(function () {\n    if (canvasRef.current) {\n      var canvas = canvasRef.current;\n      var context = canvas.getContext(\"2d\");\n      var width = document.body.offsetWidth;\n      var height = document.body.offsetHeight;\n      canvas.width = width;\n      canvas.height = height;\n      context.fillStyle = \"#8888\";\n      context.fillRect(0, 0, width, height);\n      var columns = Math.floor(width / 20) + 1;\n      var yPositions = Array.from({\n        length: columns\n      }).fill(0);\n      context.fillStyle = \"#8888\";\n      context.fillRect(0, 0, width, height);\n\n      var matrixEffect = function matrixEffect() {\n        context.fillStyle = \"#0001\";\n        context.fillRect(0, 0, width, height);\n        context.fillStyle = \"#005704\";\n        context.font = \"5pt monospace\";\n        yPositions.forEach(function (y, index) {\n          var text = String.fromCharCode(Math.random() * 128);\n          var x = index * 20;\n          context.fillText(text, x, y);\n\n          if (y > 100 + Math.random() * 10000) {\n            yPositions[index] = 0;\n          } else {\n            yPositions[index] = y + 20;\n          }\n        });\n      };\n\n      var interval = setInterval(matrixEffect, timeout);\n      return function () {\n        clearInterval(interval);\n      };\n    }\n  }, [canvasRef, timeout]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    width: 0,\n    height: 0,\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Matrix, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n\n_c = Matrix;\n\nvar _c;\n\n$RefreshReg$(_c, \"Matrix\");","map":{"version":3,"sources":["/home/smoke/√Årea de Trabalho/dashgo/src/components/FormLogin/Matrix.tsx"],"names":["useEffect","useRef","Matrix","timeout","canvasRef","current","canvas","context","getContext","width","document","body","offsetWidth","height","offsetHeight","fillStyle","fillRect","columns","Math","floor","yPositions","Array","from","length","fill","matrixEffect","font","forEach","y","index","text","String","fromCharCode","random","x","fillText","interval","setInterval","clearInterval"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AAMA,OAAO,SAASC,MAAT,OAA+C;AAAA;;AAAA,0BAA7BC,OAA6B;AAAA,MAA7BA,OAA6B,6BAAnB,EAAmB;AACpD,MAAMC,SAAS,GAAGH,MAAM,CAAoB,IAApB,CAAxB;AAEAD,EAAAA,SAAS,CAAC,YAAM;AACd,QAAII,SAAS,CAACC,OAAd,EAAuB;AACrB,UAAMC,MAAM,GAAGF,SAAS,CAACC,OAAzB;AACA,UAAME,OAAO,GAAGD,MAAM,CAACE,UAAP,CAAkB,IAAlB,CAAhB;AAEA,UAAMC,KAAK,GAAGC,QAAQ,CAACC,IAAT,CAAcC,WAA5B;AACA,UAAMC,MAAM,GAAGH,QAAQ,CAACC,IAAT,CAAcG,YAA7B;AACAR,MAAAA,MAAM,CAACG,KAAP,GAAeA,KAAf;AACAH,MAAAA,MAAM,CAACO,MAAP,GAAgBA,MAAhB;AAEAN,MAAAA,OAAO,CAACQ,SAAR,GAAoB,OAApB;AACAR,MAAAA,OAAO,CAACS,QAAR,CAAiB,CAAjB,EAAoB,CAApB,EAAuBP,KAAvB,EAA8BI,MAA9B;AAEA,UAAMI,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWV,KAAK,GAAG,EAAnB,IAAyB,CAAzC;AACA,UAAMW,UAAU,GAAGC,KAAK,CAACC,IAAN,CAAW;AAAEC,QAAAA,MAAM,EAAEN;AAAV,OAAX,EAAgCO,IAAhC,CAAqC,CAArC,CAAnB;AAEAjB,MAAAA,OAAO,CAACQ,SAAR,GAAoB,OAApB;AACAR,MAAAA,OAAO,CAACS,QAAR,CAAiB,CAAjB,EAAoB,CAApB,EAAuBP,KAAvB,EAA8BI,MAA9B;;AAEA,UAAMY,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBlB,QAAAA,OAAO,CAACQ,SAAR,GAAoB,OAApB;AACAR,QAAAA,OAAO,CAACS,QAAR,CAAiB,CAAjB,EAAoB,CAApB,EAAuBP,KAAvB,EAA8BI,MAA9B;AAEAN,QAAAA,OAAO,CAACQ,SAAR,GAAoB,SAApB;AACAR,QAAAA,OAAO,CAACmB,IAAR,GAAe,eAAf;AAEAN,QAAAA,UAAU,CAACO,OAAX,CAAmB,UAACC,CAAD,EAAYC,KAAZ,EAAsB;AACvC,cAAMC,IAAI,GAAGC,MAAM,CAACC,YAAP,CAAoBd,IAAI,CAACe,MAAL,KAAgB,GAApC,CAAb;AACA,cAAMC,CAAC,GAAGL,KAAK,GAAG,EAAlB;AACAtB,UAAAA,OAAO,CAAC4B,QAAR,CAAiBL,IAAjB,EAAuBI,CAAvB,EAA0BN,CAA1B;;AAEA,cAAIA,CAAC,GAAG,MAAMV,IAAI,CAACe,MAAL,KAAgB,KAA9B,EAAqC;AACnCb,YAAAA,UAAU,CAACS,KAAD,CAAV,GAAoB,CAApB;AACD,WAFD,MAEO;AACLT,YAAAA,UAAU,CAACS,KAAD,CAAV,GAAoBD,CAAC,GAAG,EAAxB;AACD;AACF,SAVD;AAWD,OAlBD;;AAoBA,UAAMQ,QAAQ,GAAGC,WAAW,CAACZ,YAAD,EAAetB,OAAf,CAA5B;AACA,aAAO,YAAM;AACXmC,QAAAA,aAAa,CAACF,QAAD,CAAb;AACD,OAFD;AAGD;AACF,GA5CQ,EA4CN,CAAChC,SAAD,EAAYD,OAAZ,CA5CM,CAAT;AA8CA,sBAAO;AAAQ,IAAA,KAAK,EAAE,CAAf;AAAkB,IAAA,MAAM,EAAE,CAA1B;AAA6B,IAAA,GAAG,EAAEC;AAAlC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAlDeF,M;;KAAAA,M","sourcesContent":["import { useEffect, useRef } from \"react\";\n\ninterface MatrixProps {\n  timeout?: number;\n}\n\nexport function Matrix({ timeout = 50 }: MatrixProps) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  useEffect(() => {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const context = canvas.getContext(\"2d\");\n\n      const width = document.body.offsetWidth;\n      const height = document.body.offsetHeight;\n      canvas.width = width;\n      canvas.height = height;\n\n      context.fillStyle = \"#8888\";\n      context.fillRect(0, 0, width, height);\n\n      const columns = Math.floor(width / 20) + 1;\n      const yPositions = Array.from({ length: columns }).fill(0);\n\n      context.fillStyle = \"#8888\";\n      context.fillRect(0, 0, width, height);\n\n      const matrixEffect = () => {\n        context.fillStyle = \"#0001\";\n        context.fillRect(0, 0, width, height);\n\n        context.fillStyle = \"#005704\";\n        context.font = \"5pt monospace\";\n\n        yPositions.forEach((y: number, index) => {\n          const text = String.fromCharCode(Math.random() * 128);\n          const x = index * 20;\n          context.fillText(text, x, y);\n\n          if (y > 100 + Math.random() * 10000) {\n            yPositions[index] = 0;\n          } else {\n            yPositions[index] = y + 20;\n          }\n        });\n      };\n\n      const interval = setInterval(matrixEffect, timeout);\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }, [canvasRef, timeout]);\n\n  return <canvas width={0} height={0} ref={canvasRef} />;\n}\n"]},"metadata":{},"sourceType":"module"}