{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/smoke/\\xC1rea de Trabalho/dashgo/src/pages/cards/create.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Box, Flex, Heading, Divider, Textarea } from \"@chakra-ui/react\";\nimport { HStack, Button } from \"@chakra-ui/react\";\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useMutation } from \"react-query\";\nimport { useRouter } from \"next/router\";\nimport { Header } from \"../../components/Header\";\nimport { Sidebar } from \"../../components/Sidebar\";\nimport { api } from \"../../services/api\";\nimport { queryClient } from \"../../services/queryClient\";\nconst createUserSchema = yup.object().shape({\n  name: yup.string().required(\"Nome obrigatório\"),\n  email: yup.string().required(\"E-mail obrigatório\").email(\"E-mail inválido\"),\n  password: yup.string().required(\"Senha não informada\").min(6, \"Digite ao menos 6 letras ou números\"),\n  psw_confirmation: yup.string().oneOf([null, yup.ref(\"password\")], \"As senhas diferem\")\n});\nexport default function CreateUser() {\n  const router = useRouter();\n  const createUser = useMutation(async user => {\n    const response = await api.post(\"users\", {\n      user: _objectSpread(_objectSpread({}, user), {}, {\n        created_at: new Date()\n      })\n    });\n    return response.data.user;\n  }, {\n    onSuccess: () => {\n      queryClient.invalidateQueries(\"users\");\n    }\n  });\n  const {\n    register,\n    handleSubmit,\n    formState\n  } = useForm({\n    resolver: yupResolver(createUserSchema)\n  });\n  const errors = formState.errors; //const handleCreateUser: SubmitHandler<CreateUserFormData) = (values) => {\n\n  async function handleCreateUser(values) {\n    await createUser.mutateAsync(values);\n    router.push(\"/users\"); //volta para a listagem de usuários\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      w: \"100%\",\n      my: \"6\",\n      maxWidth: 1480,\n      mx: \"auto\",\n      px: \"6\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        as: \"form\",\n        flex: \"1\",\n        borderRadius: 8,\n        bg: \"gray.800\",\n        p: [\"4\", \"8\"],\n        onSubmit: handleSubmit(handleCreateUser),\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          size: \"lg\",\n          fontWeight: \"normal\",\n          children: \"Criar usu\\xE1rio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          my: \"6\",\n          borderColor: \"gray.700\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n          placeholder: \"4552250055368113|08|2023|113\",\n          h: \"1280px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          mt: \"8\",\n          justify: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(HStack, {\n            spacing: \"4\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              as: \"a\",\n              colorScheme: \"whiteAlpha\",\n              href: \"/users\",\n              children: \"Cancelar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              isLoading: formState.isSubmitting,\n              colorScheme: \"messenger\",\n              children: \"Salvar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/smoke/Área de Trabalho/dashgo/src/pages/cards/create.tsx"],"names":["Box","Flex","Heading","Divider","Textarea","HStack","Button","useForm","yup","yupResolver","useMutation","useRouter","Header","Sidebar","api","queryClient","createUserSchema","object","shape","name","string","required","email","password","min","psw_confirmation","oneOf","ref","CreateUser","router","createUser","user","response","post","created_at","Date","data","onSuccess","invalidateQueries","register","handleSubmit","formState","resolver","errors","handleCreateUser","values","mutateAsync","push","isSubmitting"],"mappings":"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","sourcesContent":["import {\n  Box,\n  Flex,\n  Heading,\n  Divider,\n  SimpleGrid,\n  Textarea,\n} from \"@chakra-ui/react\";\nimport { VStack, HStack, Button } from \"@chakra-ui/react\";\nimport { SubmitHandler, useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useMutation } from \"react-query\";\nimport { useRouter } from \"next/router\";\n\nimport { Header } from \"../../components/Header\";\nimport { Sidebar } from \"../../components/Sidebar\";\nimport { Input } from \"../../components/Form/Input\";\nimport { api } from \"../../services/api\";\nimport { queryClient } from \"../../services/queryClient\";\n\ntype CreateUserFormData = {\n  name: string;\n  email: string;\n  password: string;\n  pasw_confirmation: string;\n};\n\nconst createUserSchema = yup.object().shape({\n  name: yup.string().required(\"Nome obrigatório\"),\n  email: yup.string().required(\"E-mail obrigatório\").email(\"E-mail inválido\"),\n  password: yup\n    .string()\n    .required(\"Senha não informada\")\n    .min(6, \"Digite ao menos 6 letras ou números\"),\n  psw_confirmation: yup\n    .string()\n    .oneOf([null, yup.ref(\"password\")], \"As senhas diferem\"),\n});\n\nexport default function CreateUser() {\n  const router = useRouter();\n\n  const createUser = useMutation(\n    async (user: CreateUserFormData) => {\n      const response = await api.post(\"users\", {\n        user: {\n          ...user,\n          created_at: new Date(),\n        },\n      });\n\n      return response.data.user;\n    },\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(\"users\");\n      },\n    }\n  );\n\n  const { register, handleSubmit, formState } = useForm({\n    resolver: yupResolver(createUserSchema),\n  });\n\n  const errors = formState.errors;\n\n  //const handleCreateUser: SubmitHandler<CreateUserFormData) = (values) => {\n  async function handleCreateUser(values: CreateUserFormData) {\n    await createUser.mutateAsync(values);\n\n    router.push(\"/users\"); //volta para a listagem de usuários\n  }\n\n  return (\n    <Box>\n      <Header />\n\n      <Flex w=\"100%\" my=\"6\" maxWidth={1480} mx=\"auto\" px=\"6\">\n        <Sidebar />\n\n        <Box\n          as=\"form\"\n          flex=\"1\"\n          borderRadius={8}\n          bg=\"gray.800\"\n          p={[\"4\", \"8\"]}\n          onSubmit={handleSubmit(handleCreateUser)}\n        >\n          <Heading size=\"lg\" fontWeight=\"normal\">\n            Criar usuário\n          </Heading>\n          <Divider my=\"6\" borderColor=\"gray.700\" />\n          <Textarea\n            placeholder=\"4552250055368113|08|2023|113\"\n            h=\"1280px\"\n          ></Textarea>\n          <Flex mt=\"8\" justify=\"flex-end\">\n            <HStack spacing=\"4\">\n              <Button as=\"a\" colorScheme=\"whiteAlpha\" href=\"/users\">\n                Cancelar\n              </Button>\n              <Button\n                type=\"submit\"\n                isLoading={formState.isSubmitting}\n                colorScheme=\"messenger\"\n              >\n                Salvar\n              </Button>\n            </HStack>\n          </Flex>\n        </Box>\n      </Flex>\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}