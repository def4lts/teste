{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/smoke/\\xC1rea de Trabalho/dashgo/src/pages/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Flex, Button, Stack } from \"@chakra-ui/react\";\nimport { Input } from \"../components/Form/Input\";\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { useContext } from \"react\";\nconst signInSchema = yup.object().shape({\n  username: yup.string().required(\"Usuário obrigatório\"),\n  password: yup.string().required(\"Senha não informada\").min(6, \"Digite ao menos 6 letras ou números\")\n});\nexport default function SignIn() {\n  const {\n    register,\n    handleSubmit,\n    formState\n  } = useForm({\n    resolver: yupResolver(signInSchema)\n  });\n  const errors = formState.errors;\n  const {\n    signIn\n  } = useContext(AuthContext); //const handleSignIn: SubmitHandler<SignInFormData> = (values) => {\n\n  async function handleSignIn(values) {\n    await signIn(values);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      w: \"100vw\",\n      h: \"100vh\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        as: \"form\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        maxWidth: 360,\n        bg: \"gray.800\",\n        p: \"8\",\n        borderRadius: 8,\n        onSubmit: handleSubmit(handleSignIn),\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: \"4\",\n          children: [/*#__PURE__*/_jsxDEV(Input, _objectSpread({\n            name: \"username\",\n            type: \"username\",\n            label: \"Usu\\xE1rio\",\n            placeholder: \"Usu\\xE1rio\",\n            error: errors.username\n          }, register(\"username\")), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, _objectSpread({\n            name: \"password\",\n            type: \"password\",\n            label: \"Senha\",\n            placeholder: \"Senha\",\n            error: errors.password\n          }, register(\"password\")), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            mt: \"6\",\n            colorScheme: \"messenger\",\n            size: \"lg\",\n            isLoading: formState.isSubmitting,\n            children: \"Entrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"sources":["/home/smoke/Área de Trabalho/dashgo/src/pages/index.tsx"],"names":["Flex","Button","Stack","Input","useForm","yup","yupResolver","AuthContext","useContext","signInSchema","object","shape","username","string","required","password","min","SignIn","register","handleSubmit","formState","resolver","errors","signIn","handleSignIn","values","isSubmitting"],"mappings":";;;;;;;;;;AAAA,SAASA,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,QAAoC,kBAApC;AACA,SAASC,KAAT,QAAsB,0BAAtB;AACA,SAAwBC,OAAxB,QAAuC,iBAAvC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,UAAT,QAA2B,OAA3B;AAOA,MAAMC,YAAY,GAAGJ,GAAG,CAACK,MAAJ,GAAaC,KAAb,CAAmB;AACtCC,EAAAA,QAAQ,EAAEP,GAAG,CAACQ,MAAJ,GAAaC,QAAb,CAAsB,qBAAtB,CAD4B;AAEtCC,EAAAA,QAAQ,EAAEV,GAAG,CACVQ,MADO,GAEPC,QAFO,CAEE,qBAFF,EAGPE,GAHO,CAGH,CAHG,EAGA,qCAHA;AAF4B,CAAnB,CAArB;AAQA,eAAe,SAASC,MAAT,GAAkB;AAC/B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAwChB,OAAO,CAAC;AACpDiB,IAAAA,QAAQ,EAAEf,WAAW,CAACG,YAAD;AAD+B,GAAD,CAArD;AAIA,QAAMa,MAAM,GAAGF,SAAS,CAACE,MAAzB;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAaf,UAAU,CAACD,WAAD,CAA7B,CAP+B,CAS/B;;AACA,iBAAeiB,YAAf,CAA4BC,MAA5B,EAAoD;AAClD,UAAMF,MAAM,CAACE,MAAD,CAAZ;AACD;;AAED,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,CAAC,EAAC,OAAR;AAAgB,MAAA,CAAC,EAAC,OAAlB;AAA0B,MAAA,UAAU,EAAC,QAArC;AAA8C,MAAA,cAAc,EAAC,QAA7D;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,EAAE,EAAC,MADL;AAEE,QAAA,aAAa,EAAC,QAFhB;AAGE,QAAA,KAAK,EAAC,MAHR;AAIE,QAAA,QAAQ,EAAE,GAJZ;AAKE,QAAA,EAAE,EAAC,UALL;AAME,QAAA,CAAC,EAAC,GANJ;AAOE,QAAA,YAAY,EAAE,CAPhB;AAQE,QAAA,QAAQ,EAAEN,YAAY,CAACK,YAAD,CARxB;AAAA,+BAUE,QAAC,KAAD;AAAO,UAAA,OAAO,EAAC,GAAf;AAAA,kCACE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,IAAI,EAAC,UAFP;AAGE,YAAA,KAAK,EAAC,YAHR;AAIE,YAAA,WAAW,EAAC,YAJd;AAKE,YAAA,KAAK,EAAEF,MAAM,CAACV;AALhB,aAMMM,QAAQ,CAAC,UAAD,CANd;AAAA;AAAA;AAAA;AAAA,kBADF,eAUE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,IAAI,EAAC,UAFP;AAGE,YAAA,KAAK,EAAC,OAHR;AAIE,YAAA,WAAW,EAAC,OAJd;AAKE,YAAA,KAAK,EAAEI,MAAM,CAACP;AALhB,aAMMG,QAAQ,CAAC,UAAD,CANd;AAAA;AAAA;AAAA;AAAA,kBAVF,eAmBE,QAAC,MAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,EAAE,EAAC,GAFL;AAGE,YAAA,WAAW,EAAC,WAHd;AAIE,YAAA,IAAI,EAAC,IAJP;AAKE,YAAA,SAAS,EAAEE,SAAS,CAACM,YALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA8CD","sourcesContent":["import { Flex, Button, Stack } from \"@chakra-ui/react\";\nimport { Input } from \"../components/Form/Input\";\nimport { SubmitHandler, useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { useContext } from \"react\";\n\ntype SignInFormData = {\n  username: string;\n  password: string;\n};\n\nconst signInSchema = yup.object().shape({\n  username: yup.string().required(\"Usuário obrigatório\"),\n  password: yup\n    .string()\n    .required(\"Senha não informada\")\n    .min(6, \"Digite ao menos 6 letras ou números\"),\n});\n\nexport default function SignIn() {\n  const { register, handleSubmit, formState } = useForm({\n    resolver: yupResolver(signInSchema),\n  });\n\n  const errors = formState.errors;\n\n  const { signIn } = useContext(AuthContext);\n\n  //const handleSignIn: SubmitHandler<SignInFormData> = (values) => {\n  async function handleSignIn(values: SignInFormData) {\n    await signIn(values);\n  }\n\n  return (\n    <>\n      <Flex w=\"100vw\" h=\"100vh\" alignItems=\"center\" justifyContent=\"center\">\n        <Flex\n          as=\"form\"\n          flexDirection=\"column\"\n          width=\"100%\"\n          maxWidth={360}\n          bg=\"gray.800\"\n          p=\"8\"\n          borderRadius={8}\n          onSubmit={handleSubmit(handleSignIn)}\n        >\n          <Stack spacing=\"4\">\n            <Input\n              name=\"username\"\n              type=\"username\"\n              label=\"Usuário\"\n              placeholder=\"Usuário\"\n              error={errors.username}\n              {...register(\"username\")}\n            />\n\n            <Input\n              name=\"password\"\n              type=\"password\"\n              label=\"Senha\"\n              placeholder=\"Senha\"\n              error={errors.password}\n              {...register(\"password\")}\n            />\n\n            <Button\n              type=\"submit\"\n              mt=\"6\"\n              colorScheme=\"messenger\"\n              size=\"lg\"\n              isLoading={formState.isSubmitting}\n            >\n              Entrar\n            </Button>\n          </Stack>\n        </Flex>\n      </Flex>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}