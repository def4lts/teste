{"ast":null,"code":"import _regeneratorRuntime from \"/home/smoke/\\xC1rea de Trabalho/dashgo/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"/home/smoke/\\xC1rea de Trabalho/dashgo/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/smoke/\\xC1rea de Trabalho/dashgo/src/contexts/AuthContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport { api } from \"../services/api\";\nimport Router from \"next/router\";\nimport { destroyCookie, parseCookies, setCookie } from \"nookies\";\nexport var AuthContext = /*#__PURE__*/createContext({});\nexport function signOut() {\n  destroyCookie(undefined, \"0dayTokenFront.token\");\n  destroyCookie(undefined, \"0dayTokenFront.refreshToken\");\n  Router.push(\"/\");\n}\nexport function AuthProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var isAuthenticated = !!user;\n  useEffect(function () {\n    var _parseCookies = parseCookies(),\n        token = _parseCookies[\"0dayTokenFront.token\"];\n\n    if (token) {\n      api.get(\"/users/view\").then(function (response) {\n        var username = response.data.username;\n        setUser({\n          username: username\n        });\n      })[\"catch\"](function () {\n        signOut();\n      });\n    }\n  }, []);\n\n  function signIn(_x) {\n    return _signIn.apply(this, arguments);\n  }\n\n  function _signIn() {\n    _signIn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n      var username, password, response, _response$data, token, refreshToken;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              username = _ref2.username, password = _ref2.password;\n              _context.prev = 1;\n              _context.next = 4;\n              return api.post(\"/sessions\", {\n                username: username,\n                password: password\n              });\n\n            case 4:\n              response = _context.sent;\n              _response$data = response.data, token = _response$data.token, refreshToken = _response$data.refreshToken;\n              setCookie(undefined, \"0dayTokenFront.token\", token, {\n                maxAge: 60 * 60 * 24 * 30,\n                //30 days\n                path: \"/\"\n              });\n              setCookie(undefined, \"0dayTokenFront.refreshToken\", refreshToken, {\n                maxAge: 60 * 60 * 24 * 30,\n                //30 days\n                path: \"/\"\n              });\n              setUser({\n                username: username\n              });\n              api.defaults.headers[\"Authorization\"] = \"Bearer \".concat(token);\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 12]]);\n    }));\n    return _signIn.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      signIn: signIn,\n      isAuthenticated: isAuthenticated,\n      user: user\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuthProvider, \"hT6C72rcbfRUedrDq+TPaFfRI/M=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/smoke/√Årea de Trabalho/dashgo/src/contexts/AuthContext.tsx"],"names":["createContext","useEffect","useState","api","Router","destroyCookie","parseCookies","setCookie","AuthContext","signOut","undefined","push","AuthProvider","children","user","setUser","isAuthenticated","token","get","then","response","username","data","signIn","password","post","refreshToken","maxAge","path","defaults","headers","console","log"],"mappings":"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","sourcesContent":["import { createContext, ReactNode, useEffect, useState } from \"react\";\nimport { api } from \"../services/api\";\nimport Router from \"next/router\";\nimport { destroyCookie, parseCookies, setCookie } from \"nookies\";\n\ntype User = {\n  username: string;\n};\n\ntype SignCredentials = {\n  username: string;\n  password: string;\n};\n\ntype AuthContextData = {\n  signIn(credentials: SignCredentials): Promise<void>;\n  user: User;\n  isAuthenticated: boolean;\n};\n\ntype AuthProviderProps = {\n  children: ReactNode;\n};\n\nexport const AuthContext = createContext({} as AuthContextData);\n\nexport function signOut() {\n  destroyCookie(undefined, \"0dayTokenFront.token\");\n  destroyCookie(undefined, \"0dayTokenFront.refreshToken\");\n\n  Router.push(\"/\");\n}\n\nexport function AuthProvider({ children }: AuthProviderProps) {\n  const [user, setUser] = useState<User>();\n\n  const isAuthenticated = !!user;\n\n  useEffect(() => {\n    const { \"0dayTokenFront.token\": token } = parseCookies();\n\n    if (token) {\n      api\n        .get(\"/users/view\")\n        .then((response) => {\n          const { username } = response.data;\n\n          setUser({ username });\n        })\n        .catch(() => {\n          signOut();\n        });\n    }\n  }, []);\n\n  async function signIn({ username, password }: SignCredentials) {\n    try {\n      const response = await api.post(\"/sessions\", {\n        username,\n        password,\n      });\n\n      const { token, refreshToken } = response.data;\n\n      setCookie(undefined, \"0dayTokenFront.token\", token, {\n        maxAge: 60 * 60 * 24 * 30, //30 days\n        path: \"/\",\n      });\n\n      setCookie(undefined, \"0dayTokenFront.refreshToken\", refreshToken, {\n        maxAge: 60 * 60 * 24 * 30, //30 days\n        path: \"/\",\n      });\n\n      setUser({ username });\n\n      api.defaults.headers[\"Authorization\"] = `Bearer ${token}`;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  return (\n    <AuthContext.Provider value={{ signIn, isAuthenticated, user }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}