{"ast":null,"code":"import _regeneratorRuntime from \"/home/smoke/\\xC1rea de Trabalho/dashgo/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"/home/smoke/\\xC1rea de Trabalho/dashgo/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/smoke/\\xC1rea de Trabalho/dashgo/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _defineProperty from \"/home/smoke/\\xC1rea de Trabalho/dashgo/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/home/smoke/\\xC1rea de Trabalho/dashgo/src/pages/cards/create.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Box, Flex, Heading, Divider, Textarea, Menu, MenuButton, MenuList, MenuItem, useToast } from \"@chakra-ui/react\";\nimport { HStack, Button } from \"@chakra-ui/react\";\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { Header } from \"../../components/Header\";\nimport { Sidebar } from \"../../components/Sidebar\";\nimport { api } from \"../../services/api\";\nimport { ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { useCategories } from \"../../services/hooks/useCategories\";\nvar categoryId;\n\nvar Cartao = function Cartao(number, month, year, cvv, category_id) {\n  _classCallCheck(this, Cartao);\n\n  _defineProperty(this, \"number\", void 0);\n\n  _defineProperty(this, \"month\", void 0);\n\n  _defineProperty(this, \"year\", void 0);\n\n  _defineProperty(this, \"cvv\", void 0);\n\n  _defineProperty(this, \"category_id\", void 0);\n\n  if (number === undefined || number.length <= 0 || month === undefined || month.length <= 0 || year === undefined || year.length <= 0 || cvv === undefined || cvv.length <= 0) {}\n\n  this.number = number;\n  this.month = month;\n  this.year = year;\n  this.cvv = cvv;\n  this.category_id = categoryId;\n};\n\nvar createUserSchema = yup.object().shape({\n  cards: yup.string().required(\"Cartões obrigatórios\")\n});\n\nfunction filter_array(CardList) {\n  var index = -1;\n  var arr_length = CardList ? CardList.length : 0;\n  var resIndex = -1;\n  var result = [];\n\n  while (++index < arr_length) {\n    var value = CardList[index];\n\n    if (value) {\n      result[++resIndex] = value;\n    }\n  }\n\n  return result;\n}\n\nfunction start(_x, _x2) {\n  return _start.apply(this, arguments);\n}\n\nfunction _start() {\n  _start = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(cardArray, toast) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            cardArray.forEach( /*#__PURE__*/function () {\n              var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dado, index) {\n                return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                          var number, month, year, cvv, response, responseIds, inserir, relation;\n                          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                            while (1) {\n                              switch (_context2.prev = _context2.next) {\n                                case 0:\n                                  number = String(dado).split(\"|\")[0];\n                                  month = String(dado).split(\"|\")[1];\n                                  year = String(dado).split(\"|\")[2];\n                                  cvv = String(dado).split(\"|\")[3];\n                                  _context2.next = 6;\n                                  return api.post(\"/products\", {\n                                    number: number,\n                                    month: month,\n                                    year: year,\n                                    cvv: cvv,\n                                    category_id: categoryId\n                                  });\n\n                                case 6:\n                                  response = _context2.sent;\n                                  _context2.next = 9;\n                                  return api.get(\"/products/1\");\n\n                                case 9:\n                                  responseIds = _context2.sent;\n                                  inserir = responseIds.data.productsIds;\n                                  inserir.push(String(response.data.id));\n                                  _context2.next = 14;\n                                  return api.post(\"/users/products\", {\n                                    products_id: inserir\n                                  });\n\n                                case 14:\n                                  relation = _context2.sent;\n                                  toast({\n                                    title: \"Cartão enviado com sucesso!\",\n                                    status: \"success\"\n                                  });\n\n                                case 16:\n                                case \"end\":\n                                  return _context2.stop();\n                              }\n                            }\n                          }, _callee2);\n                        })), 1000 * (index + 1));\n\n                      case 1:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              }));\n\n              return function (_x4, _x5) {\n                return _ref2.apply(this, arguments);\n              };\n            }());\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _start.apply(this, arguments);\n}\n\nexport default function CreateUser() {\n  _s();\n\n  var _this = this;\n\n  var _useCategories = useCategories(),\n      data = _useCategories.data,\n      isLoading = _useCategories.isLoading,\n      isFetching = _useCategories.isFetching,\n      error = _useCategories.error;\n\n  var toast = useToast();\n\n  var _useForm = useForm({\n    resolver: yupResolver(createUserSchema)\n  }),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState;\n\n  var errors = formState.errors; //const handleCreateUser: SubmitHandler<CreateUserFormData) = (values) => {\n\n  function handleCreateCard(_x3) {\n    return _handleCreateCard.apply(this, arguments);\n  }\n\n  function _handleCreateCard() {\n    _handleCreateCard = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var cardList, cardArray;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              cardList = values.cards.replace(\"\\r\", \"\").split(\"\\n\");\n              cardArray = filter_array(cardList);\n              start(cardArray, toast); //router.push(\"/users\"); //volta para a listagem de usuários\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleCreateCard.apply(this, arguments);\n  }\n\n  var selectCategory;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      w: \"100%\",\n      my: \"6\",\n      maxWidth: 1480,\n      mx: \"auto\",\n      px: \"6\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        as: \"form\",\n        flex: \"1\",\n        borderRadius: 8,\n        bg: \"gray.800\",\n        p: [\"4\", \"8\"],\n        onSubmit: handleSubmit(handleCreateCard),\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          mb: \"8\",\n          justifyContent: \"space-between\",\n          align: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            size: \"lg\",\n            fontWeight: \"normal\",\n            children: \"Upload Cart\\xF5es\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Menu, {\n            children: function children(_ref) {\n              var isOpen = _ref.isOpen;\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(MenuButton, {\n                  isActive: isOpen,\n                  as: Button,\n                  colorScheme: \"messenger\",\n                  rightIcon: /*#__PURE__*/_jsxDEV(ChevronDownIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 32\n                  }, _this),\n                  children: isOpen ? \"Fechar\" : selectCategory ? selectCategory : \"Categoria\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(MenuList, {\n                  children: data === null || data === void 0 ? void 0 : data.categories.map(function (category) {\n                    return /*#__PURE__*/_jsxDEV(MenuItem, {\n                      color: \"black\",\n                      onClick: function onClick() {\n                        categoryId = category.id;\n                        selectCategory = category.name;\n                      },\n                      children: category.name\n                    }, category.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 23\n                    }, _this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          my: \"6\",\n          borderColor: \"gray.700\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Textarea, _objectSpread({\n          placeholder: \"4552250055368113|08|2023|113\",\n          h: \"400px\"\n        }, register(\"cards\")), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          mt: \"8\",\n          justify: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(HStack, {\n            spacing: \"4\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              as: \"a\",\n              colorScheme: \"whiteAlpha\",\n              href: \"/users\",\n              children: \"Cancelar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              isLoading: formState.isSubmitting,\n              colorScheme: \"messenger\",\n              children: \"Salvar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateUser, \"VT4jeLo+ds8XynaWYxY8sElyBnk=\", false, function () {\n  return [useCategories, useToast, useForm];\n});\n\n_c = CreateUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateUser\");","map":{"version":3,"sources":["/home/smoke/Área de Trabalho/dashgo/src/pages/cards/create.tsx"],"names":["Box","Flex","Heading","Divider","Textarea","Menu","MenuButton","MenuList","MenuItem","useToast","HStack","Button","useForm","yup","yupResolver","Header","Sidebar","api","ChevronDownIcon","useCategories","categoryId","Cartao","number","month","year","cvv","category_id","undefined","length","createUserSchema","object","shape","cards","string","required","filter_array","CardList","index","arr_length","resIndex","result","value","start","cardArray","toast","forEach","dado","setTimeout","String","split","post","response","get","responseIds","inserir","data","productsIds","push","id","products_id","relation","title","status","CreateUser","isLoading","isFetching","error","resolver","register","handleSubmit","formState","errors","handleCreateCard","values","cardList","replace","selectCategory","isOpen","categories","map","category","name","isSubmitting"],"mappings":"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","sourcesContent":["import {\n  Box,\n  Flex,\n  Heading,\n  Divider,\n  Textarea,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  useToast,\n} from \"@chakra-ui/react\";\nimport { HStack, Button } from \"@chakra-ui/react\";\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport Toastify from \"toastify-js\";\n\nimport { Header } from \"../../components/Header\";\nimport { Sidebar } from \"../../components/Sidebar\";\nimport { api } from \"../../services/api\";\nimport { ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { useCategories } from \"../../services/hooks/useCategories\";\n\nlet categoryId: string;\n\ntype CreateUserFormData = {\n  cards: string;\n};\n\nclass Cartao {\n  number: string;\n  month: string;\n  year: string;\n  cvv: string;\n  category_id: string;\n  constructor(\n    number: string,\n    month: string,\n    year: string,\n    cvv: string,\n    category_id: string\n  ) {\n    if (\n      number === undefined ||\n      number.length <= 0 ||\n      month === undefined ||\n      month.length <= 0 ||\n      year === undefined ||\n      year.length <= 0 ||\n      cvv === undefined ||\n      cvv.length <= 0\n    ) {\n    }\n    this.number = number;\n    this.month = month;\n    this.year = year;\n    this.cvv = cvv;\n    this.category_id = categoryId;\n  }\n}\n\nconst createUserSchema = yup.object().shape({\n  cards: yup.string().required(\"Cartões obrigatórios\"),\n});\n\nfunction filter_array(CardList) {\n  let index = -1;\n  const arr_length = CardList ? CardList.length : 0;\n  let resIndex = -1;\n  const result = [];\n  while (++index < arr_length) {\n    const value = CardList[index];\n\n    if (value) {\n      result[++resIndex] = value;\n    }\n  }\n  return result;\n}\n\nasync function start(cardArray, toast) {\n  cardArray.forEach(async (dado, index) => {\n    setTimeout(async function () {\n      let number = String(dado).split(\"|\")[0];\n      let month = String(dado).split(\"|\")[1];\n      let year = String(dado).split(\"|\")[2];\n      let cvv = String(dado).split(\"|\")[3];\n\n      const response = await api.post(\"/products\", {\n        number: number,\n        month: month,\n        year: year,\n        cvv: cvv,\n        category_id: categoryId,\n      });\n\n      const responseIds = await api.get(\"/products/1\");\n\n      const inserir = responseIds.data.productsIds;\n\n      inserir.push(String(response.data.id));\n\n      const relation = await api.post(\"/users/products\", {\n        products_id: inserir,\n      });\n\n      toast({\n        title: \"Cartão enviado com sucesso!\",\n        status: \"success\",\n      });\n    }, 1000 * (index + 1));\n  });\n}\n\nexport default function CreateUser() {\n  const { data, isLoading, isFetching, error } = useCategories();\n\n  const toast = useToast();\n\n  const { register, handleSubmit, formState } = useForm({\n    resolver: yupResolver(createUserSchema),\n  });\n\n  const errors = formState.errors;\n\n  //const handleCreateUser: SubmitHandler<CreateUserFormData) = (values) => {\n  async function handleCreateCard(values: CreateUserFormData) {\n    const cardList = values.cards.replace(\"\\r\", \"\").split(\"\\n\");\n    const cardArray = filter_array(cardList);\n    start(cardArray, toast);\n    //router.push(\"/users\"); //volta para a listagem de usuários\n  }\n\n  let selectCategory: string;\n\n  return (\n    <Box>\n      <Header />\n\n      <Flex w=\"100%\" my=\"6\" maxWidth={1480} mx=\"auto\" px=\"6\">\n        <Sidebar />\n\n        <Box\n          as=\"form\"\n          flex=\"1\"\n          borderRadius={8}\n          bg=\"gray.800\"\n          p={[\"4\", \"8\"]}\n          onSubmit={handleSubmit(handleCreateCard)}\n        >\n          <Flex mb=\"8\" justifyContent=\"space-between\" align=\"center\">\n            <Heading size=\"lg\" fontWeight=\"normal\">\n              Upload Cartões\n            </Heading>\n            <Menu>\n              {({ isOpen }) => (\n                <>\n                  <MenuButton\n                    isActive={isOpen}\n                    as={Button}\n                    colorScheme=\"messenger\"\n                    rightIcon={<ChevronDownIcon />}\n                  >\n                    {isOpen\n                      ? \"Fechar\"\n                      : selectCategory\n                      ? selectCategory\n                      : \"Categoria\"}\n                  </MenuButton>\n                  <MenuList>\n                    {data?.categories.map((category) => (\n                      <MenuItem\n                        color=\"black\"\n                        key={category.id}\n                        onClick={() => {\n                          categoryId = category.id;\n                          selectCategory = category.name;\n                        }}\n                      >\n                        {category.name}\n                      </MenuItem>\n                    ))}\n                  </MenuList>\n                </>\n              )}\n            </Menu>\n          </Flex>\n          <Divider my=\"6\" borderColor=\"gray.700\" />\n          <Textarea\n            placeholder=\"4552250055368113|08|2023|113\"\n            h=\"400px\"\n            {...register(\"cards\")}\n          ></Textarea>\n          <Flex mt=\"8\" justify=\"flex-end\">\n            <HStack spacing=\"4\">\n              <Button as=\"a\" colorScheme=\"whiteAlpha\" href=\"/users\">\n                Cancelar\n              </Button>\n              <Button\n                type=\"submit\"\n                isLoading={formState.isSubmitting}\n                colorScheme=\"messenger\"\n              >\n                Salvar\n              </Button>\n            </HStack>\n          </Flex>\n        </Box>\n      </Flex>\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}