{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { Text, Link as ChakraLink, Icon } from \"@chakra-ui/react\"; //import Link from 'next/link'\n\nimport { ActiveLink } from \"./ActiveLink\";\nexport function NavLink(_ref) {\n  let {\n    icon,\n    children,\n    href\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"icon\", \"children\", \"href\"]);\n\n  return /*#__PURE__*/_jsx(ActiveLink, {\n    href: href,\n    passHref: true,\n    children: /*#__PURE__*/_jsxs(ChakraLink, _objectSpread(_objectSpread({\n      display: \"flex\",\n      align: \"center\"\n    }, rest), {}, {\n      href: href,\n      children: [/*#__PURE__*/_jsx(Icon, {\n        as: icon,\n        fontSize: \"22\"\n      }), /*#__PURE__*/_jsx(Text, {\n        ml: \"4\",\n        fontSize: \"17\",\n        fontWeight: \"medium\",\n        children: children\n      })]\n    }))\n  });\n}","map":null,"metadata":{},"sourceType":"module"}