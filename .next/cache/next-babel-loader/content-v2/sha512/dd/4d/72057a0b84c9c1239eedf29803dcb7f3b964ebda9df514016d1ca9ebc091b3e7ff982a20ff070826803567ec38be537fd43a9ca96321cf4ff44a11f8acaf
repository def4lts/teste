{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/smoke/\\xC1rea de Trabalho/dashgo/src/pages/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Flex, Button, Stack } from '@chakra-ui/react';\nimport { Input } from '../components/Form/Input';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nconst signInSchema = yup.object().shape({\n  email: yup.string().required(\"E-mail obrigatório\").email(\"E-mail inválido\"),\n  password: yup.string().required(\"Senha não informada\").min(6, 'Digite ao menos 6 letras ou números')\n});\nexport default function SignIn() {\n  const {\n    register,\n    handleSubmit,\n    formState\n  } = useForm({\n    resolver: yupResolver(signInSchema)\n  });\n  const errors = formState.errors; //const handleSignIn: SubmitHandler<SignInFormData> = (values) => {\n\n  function handleSignIn(values) {\n    console.log(values);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      w: \"100vw\",\n      h: \"100vh\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        as: \"form\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        maxWidth: 360,\n        bg: \"gray.800\",\n        p: \"8\",\n        borderRadius: 8,\n        onSubmit: handleSubmit(handleSignIn),\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: \"4\",\n          children: [/*#__PURE__*/_jsxDEV(Input, _objectSpread({\n            name: \"email\",\n            type: \"email\",\n            label: \"E-mail\",\n            placeholder: \"E-mail\",\n            error: errors.email\n          }, register('email')), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, _objectSpread({\n            name: \"password\",\n            type: \"password\",\n            label: \"Senha\",\n            placeholder: \"Senha\",\n            error: errors.password\n          }, register('password')), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            mt: \"6\",\n            colorScheme: \"messenger\",\n            size: \"lg\",\n            isLoading: formState.isSubmitting,\n            children: \"Entrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"sources":["/home/smoke/Área de Trabalho/dashgo/src/pages/index.tsx"],"names":["Flex","Button","Stack","Input","useForm","yup","yupResolver","signInSchema","object","shape","email","string","required","password","min","SignIn","register","handleSubmit","formState","resolver","errors","handleSignIn","values","console","log","isSubmitting"],"mappings":";;;;;;;;;;AAAA,SAASA,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,QAAoC,kBAApC;AACA,SAASC,KAAT,QAAsB,0BAAtB;AACA,SAAwBC,OAAxB,QAAuC,iBAAvC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAOA,MAAMC,YAAY,GAAGF,GAAG,CAACG,MAAJ,GAAaC,KAAb,CAAmB;AACtCC,EAAAA,KAAK,EAAEL,GAAG,CAACM,MAAJ,GAAaC,QAAb,CAAsB,oBAAtB,EAA4CF,KAA5C,CAAkD,iBAAlD,CAD+B;AAEtCG,EAAAA,QAAQ,EAAER,GAAG,CAACM,MAAJ,GAAaC,QAAb,CAAsB,qBAAtB,EAA6CE,GAA7C,CAAiD,CAAjD,EAAoD,qCAApD;AAF4B,CAAnB,CAArB;AAKA,eAAe,SAASC,MAAT,GAAkB;AAC/B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAwCd,OAAO,CAAC;AACpDe,IAAAA,QAAQ,EAAEb,WAAW,CAACC,YAAD;AAD+B,GAAD,CAArD;AAIA,QAAMa,MAAM,GAAGF,SAAS,CAACE,MAAzB,CAL+B,CAO/B;;AACA,WAASC,YAAT,CAAsBC,MAAtB,EAA8C;AAC5CC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD;;AAED,sBACE;AAAA,2BACI,QAAC,IAAD;AACE,MAAA,CAAC,EAAC,OADJ;AAEE,MAAA,CAAC,EAAC,OAFJ;AAGE,MAAA,UAAU,EAAC,QAHb;AAIE,MAAA,cAAc,EAAC,QAJjB;AAAA,6BAME,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,MAAT;AACE,QAAA,aAAa,EAAC,QADhB;AAEE,QAAA,KAAK,EAAC,MAFR;AAGE,QAAA,QAAQ,EAAE,GAHZ;AAIE,QAAA,EAAE,EAAC,UAJL;AAKE,QAAA,CAAC,EAAC,GALJ;AAME,QAAA,YAAY,EAAE,CANhB;AAOE,QAAA,QAAQ,EAAEL,YAAY,CAACI,YAAD,CAPxB;AAAA,+BASE,QAAC,KAAD;AAAO,UAAA,OAAO,EAAC,GAAf;AAAA,kCACE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,KAAK,EAAC,QAHR;AAIE,YAAA,WAAW,EAAC,QAJd;AAKE,YAAA,KAAK,EAAED,MAAM,CAACV;AALhB,aAMMM,QAAQ,CAAC,OAAD,CANd;AAAA;AAAA;AAAA;AAAA,kBADF,eAUE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,IAAI,EAAC,UAFP;AAGE,YAAA,KAAK,EAAC,OAHR;AAIE,YAAA,WAAW,EAAC,OAJd;AAKE,YAAA,KAAK,EAAEI,MAAM,CAACP;AALhB,aAMMG,QAAQ,CAAC,UAAD,CANd;AAAA;AAAA;AAAA;AAAA,kBAVF,eAmBE,QAAC,MAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,EAAE,EAAC,GAFL;AAGE,YAAA,WAAW,EAAC,WAHd;AAIE,YAAA,IAAI,EAAC,IAJP;AAKE,YAAA,SAAS,EAAEE,SAAS,CAACO,YALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AADJ,mBADF;AAkDD","sourcesContent":["import { Flex, Button, Stack } from '@chakra-ui/react'\nimport { Input } from '../components/Form/Input'\nimport { SubmitHandler, useForm } from 'react-hook-form'\nimport * as yup from 'yup'\nimport { yupResolver } from '@hookform/resolvers/yup'\n\ntype SignInFormData = {\n  email: string\n  password: string\n}\n\nconst signInSchema = yup.object().shape({\n  email: yup.string().required(\"E-mail obrigatório\").email(\"E-mail inválido\"),\n  password: yup.string().required(\"Senha não informada\").min(6, 'Digite ao menos 6 letras ou números')\n})\n\nexport default function SignIn() {\n  const { register, handleSubmit, formState } = useForm({\n    resolver: yupResolver(signInSchema)\n  })\n\n  const errors = formState.errors\n\n  //const handleSignIn: SubmitHandler<SignInFormData> = (values) => {\n  function handleSignIn(values: SignInFormData) {\n    console.log(values)\n  }\n\n  return (\n    <>\n        <Flex \n          w=\"100vw\" \n          h=\"100vh\" \n          alignItems=\"center\" \n          justifyContent=\"center\"\n          >\n          <Flex as=\"form\" \n            flexDirection=\"column\"\n            width=\"100%\" \n            maxWidth={360}\n            bg=\"gray.800\"\n            p=\"8\"\n            borderRadius={8}\n            onSubmit={handleSubmit(handleSignIn)}\n            >\n            <Stack spacing=\"4\">\n              <Input \n                name=\"email\" \n                type=\"email\" \n                label=\"E-mail\" \n                placeholder=\"E-mail\" \n                error={errors.email}\n                {...register('email')}\n              />\n\n              <Input \n                name=\"password\" \n                type=\"password\" \n                label=\"Senha\" \n                placeholder=\"Senha\" \n                error={errors.password}\n                {...register('password')}\n              />\n              \n              <Button \n                type=\"submit\" \n                mt=\"6\" \n                colorScheme=\"messenger\" \n                size=\"lg\"\n                isLoading={formState.isSubmitting}\n              >\n                Entrar\n              </Button>\n            </Stack>\n          </Flex>\n        </Flex>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}