{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Button, Flex, Stack, Text, useBreakpointValue } from \"@chakra-ui/react\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { Input } from \"./Input\";\nimport { useForm } from \"react-hook-form\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../contexts/AuthContext\";\nconst Empresa = \"<Zero Day />\";\nconst SignInForSchema = yup.object().shape({\n  username: yup.string().required(\"Usuário obrigatório\"),\n  password: yup.string().required(\"Senha obrigatória\").min(6, \"Digite ao menos 6 letras ou números\")\n});\nexport function Form() {\n  const isWideVersion = useBreakpointValue({\n    base: false,\n    lg: true\n  });\n  const {\n    register,\n    handleSubmit,\n    formState\n  } = useForm({\n    resolver: yupResolver(SignInForSchema)\n  });\n  const errors = formState.errors;\n  const {\n    signIn\n  } = useContext(AuthContext);\n\n  async function handleSignIn(values) {\n    await signIn(values);\n  }\n\n  return /*#__PURE__*/_jsx(Flex, {\n    as: \"form\",\n    width: \"100%\",\n    maxWidth: 360,\n    p: \"8\",\n    borderRadius: 25,\n    flexDir: \"column\",\n    onSubmit: handleSubmit(handleSignIn),\n    zIndex: 3,\n    children: /*#__PURE__*/_jsxs(Stack, {\n      spacing: [\"78px\", \"9\"],\n      children: [/*#__PURE__*/_jsx(Text, {\n        zIndex: 2,\n        fontSize: \"5xl\",\n        align: \"center\",\n        color: \"gray.200\",\n        children: Empresa\n      }), /*#__PURE__*/_jsxs(Stack, {\n        spacing: [\"9\", \"4\"],\n        children: [/*#__PURE__*/_jsx(Input, _objectSpread({\n          name: \"username\",\n          type: \"text\",\n          label: \"USU\\xC1RIO:\",\n          error: errors.username\n        }, register(\"username\"))), /*#__PURE__*/_jsx(Input, _objectSpread({\n          name: \"password\",\n          type: \"password\",\n          label: \"SENHA:\",\n          error: errors.password\n        }, register(\"password\")))]\n      }), /*#__PURE__*/_jsx(Button, {\n        type: \"submit\",\n        mt: \"6\",\n        variant: \"transparent\",\n        border: \"2px\",\n        borderColor: \"green.900\",\n        fontSize: \"2xl\",\n        size: \"lg\",\n        isLoading: formState.isSubmitting,\n        children: \"Entrar\"\n      }), /*#__PURE__*/_jsx(Text, {\n        zIndex: 2,\n        fontSize: \"sm\",\n        align: \"center\",\n        color: \"gray.200\",\n        children: \"ADQUIRIR ACESSO\"\n      })]\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}