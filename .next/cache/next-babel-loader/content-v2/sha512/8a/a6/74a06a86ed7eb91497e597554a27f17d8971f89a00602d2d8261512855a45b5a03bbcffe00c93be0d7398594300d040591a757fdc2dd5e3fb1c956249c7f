{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/smoke/\\xC1rea de Trabalho/dashgo/src/components/Header/index.tsx\";\nimport { Flex, useBreakpointValue, Icon, IconButton } from '@chakra-ui/react';\nimport { Profile } from './Profile';\nimport { Notifications } from './Notifications';\nimport { SearchBox } from './SearchBox';\nimport { Logo } from './Logo';\nimport { useSidebarDrawer } from '../../contexts/SidebarDrawerContext';\nimport { RiMenuLine } from 'react-icons/ri';\nexport function Header() {\n  const {\n    onOpen\n  } = useSidebarDrawer();\n  const isTelaGrande = useBreakpointValue({\n    base: false,\n    lg: true\n  });\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    as: \"header\",\n    w: \"100%\",\n    maxWidth: 1210,\n    h: \"20\",\n    marginX: \"auto\",\n    mt: \"4\",\n    align: \"center\",\n    px: \"6\",\n    children: [!isTelaGrande && /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"Open navigation\",\n      icon: /*#__PURE__*/_jsxDEV(Icon, {\n        as: RiMenuLine\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 22\n      }, this),\n      fontSize: \"24\",\n      variant: \"unstyled\",\n      onClick: onOpen,\n      mr: \"2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }, this), isTelaGrande && /*#__PURE__*/_jsxDEV(SearchBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      align: \"center\",\n      ml: \"auto\",\n      children: [/*#__PURE__*/_jsxDEV(Notifications, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Profile, {\n        showName: isTelaGrande\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this);\n} // Flex é um container com display Flex\n// Stack é um container que permite espaçamento igual entre os componentes\n// HStack é um Stack com display inline-block\n// Box é uma div vazia\n// Avatar tem a vantagem de mostrar as iniciais, caso não tenha imagem","map":{"version":3,"sources":["/home/smoke/Área de Trabalho/dashgo/src/components/Header/index.tsx"],"names":["Flex","useBreakpointValue","Icon","IconButton","Profile","Notifications","SearchBox","Logo","useSidebarDrawer","RiMenuLine","Header","onOpen","isTelaGrande","base","lg"],"mappings":";;AAAA,SAASA,IAAT,EAAeC,kBAAf,EAAmCC,IAAnC,EAAyCC,UAAzC,QAA2D,kBAA3D;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,gBAAT,QAAiC,qCAAjC;AACA,SAASC,UAAT,QAA2B,gBAA3B;AAEA,OAAO,SAASC,MAAT,GAAkB;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAAaH,gBAAgB,EAAnC;AAEA,QAAMI,YAAY,GAAGX,kBAAkB,CAAC;AACrCY,IAAAA,IAAI,EAAE,KAD+B;AAErCC,IAAAA,EAAE,EAAE;AAFiC,GAAD,CAAvC;AAKA,sBACG,QAAC,IAAD;AACG,IAAA,EAAE,EAAC,QADN;AAEG,IAAA,CAAC,EAAC,MAFL;AAGG,IAAA,QAAQ,EAAE,IAHb;AAIG,IAAA,CAAC,EAAC,IAJL;AAKG,IAAA,OAAO,EAAC,MALX;AAMG,IAAA,EAAE,EAAC,GANN;AAOG,IAAA,KAAK,EAAC,QAPT;AAQG,IAAA,EAAE,EAAC,GARN;AAAA,eAWK,CAACF,YAAD,iBACC,QAAC,UAAD;AACG,oBAAW,iBADd;AAEG,MAAA,IAAI,eAAE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAEH;AAAV;AAAA;AAAA;AAAA;AAAA,cAFT;AAGG,MAAA,QAAQ,EAAC,IAHZ;AAIG,MAAA,OAAO,EAAC,UAJX;AAKG,MAAA,OAAO,EAAEE,MALZ;AAMG,MAAA,EAAE,EAAC;AANN;AAAA;AAAA;AAAA;AAAA,YAZN,eAsBG,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAtBH,EAwBKC,YAAY,iBAAI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAxBrB,eA0BG,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,QAAZ;AAAqB,MAAA,EAAE,EAAC,MAAxB;AAAA,8BACG,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cADH,eAEG,QAAC,OAAD;AAAS,QAAA,QAAQ,EAAGA;AAApB;AAAA;AAAA;AAAA;AAAA,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BH;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAiCF,C,CAED;AACA;AACA;AACA;AACA","sourcesContent":["import { Flex, useBreakpointValue, Icon, IconButton } from '@chakra-ui/react'\nimport { Profile } from './Profile'\nimport { Notifications } from './Notifications'\nimport { SearchBox } from './SearchBox'\nimport { Logo } from './Logo'\nimport { useSidebarDrawer } from '../../contexts/SidebarDrawerContext'\nimport { RiMenuLine } from 'react-icons/ri'\n\nexport function Header() {\n   const { onOpen } = useSidebarDrawer()\n\n   const isTelaGrande = useBreakpointValue({\n      base: false,\n      lg: true\n   })\n\n   return (\n      <Flex \n         as=\"header\" \n         w=\"100%\" \n         maxWidth={1210} \n         h=\"20\"\n         marginX=\"auto\"\n         mt=\"4\"\n         align=\"center\"\n         px=\"6\"\n      >\n\n         { !isTelaGrande && (\n            <IconButton \n               aria-label=\"Open navigation\"\n               icon={<Icon as={RiMenuLine} />}\n               fontSize=\"24\"\n               variant=\"unstyled\"\n               onClick={onOpen}\n               mr=\"2\"\n            />\n         )}\n\n         <Logo />\n         \n         { isTelaGrande && <SearchBox /> }\n      \n         <Flex align=\"center\" ml=\"auto\" >\n            <Notifications />        \n            <Profile showName={ isTelaGrande } />\n         </Flex>\n      </Flex>\n   )\n}\n\n// Flex é um container com display Flex\n// Stack é um container que permite espaçamento igual entre os componentes\n// HStack é um Stack com display inline-block\n// Box é uma div vazia\n// Avatar tem a vantagem de mostrar as iniciais, caso não tenha imagem\n"]},"metadata":{},"sourceType":"module"}