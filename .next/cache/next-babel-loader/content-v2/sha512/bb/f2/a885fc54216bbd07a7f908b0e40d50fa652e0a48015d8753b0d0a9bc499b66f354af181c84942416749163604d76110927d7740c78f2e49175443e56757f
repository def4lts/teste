{"ast":null,"code":"import { useQuery } from \"react-query\";\nimport { api } from \"../api\";\n\nasync function getAll() {\n  let responseProducts = await api.get(`/products/1`);\n  let totalProducts = Number(responseProducts.data.total);\n  let responseClients = await api.get(`/clients/1`);\n  let totalClients = Number(responseClients.data.total);\n  const clients = responseClients.data.clients.map(client => {\n    return {\n      id: client.id,\n      name: client.name,\n      number: client.number,\n      created_at: new Date(client.created_at).toLocaleDateString(\"pt-BR\", {\n        day: \"2-digit\",\n        month: \"long\",\n        year: \"numeric\"\n      })\n    };\n  });\n  return {\n    totalProducts,\n    totalClients,\n    clients\n  };\n}\n\nexport function useAll() {\n  return useQuery(\"all\", () => getAll(), {\n    staleTime: 1000\n  });\n}","map":{"version":3,"sources":["/home/smoke/√Årea de Trabalho/dashgo/src/services/hooks/useAll.ts"],"names":["useQuery","api","getAll","responseProducts","get","totalProducts","Number","data","total","responseClients","totalClients","clients","map","client","id","name","number","created_at","Date","toLocaleDateString","day","month","year","useAll","staleTime"],"mappings":"AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,GAAT,QAAoB,QAApB;;AAeA,eAAeC,MAAf,GAA8C;AAC5C,MAAIC,gBAAgB,GAAG,MAAMF,GAAG,CAACG,GAAJ,CAAS,aAAT,CAA7B;AACA,MAAIC,aAAa,GAAGC,MAAM,CAACH,gBAAgB,CAACI,IAAjB,CAAsBC,KAAvB,CAA1B;AAEA,MAAIC,eAAe,GAAG,MAAMR,GAAG,CAACG,GAAJ,CAAS,YAAT,CAA5B;AACA,MAAIM,YAAY,GAAGJ,MAAM,CAACG,eAAe,CAACF,IAAhB,CAAqBC,KAAtB,CAAzB;AAEA,QAAMG,OAAO,GAAGF,eAAe,CAACF,IAAhB,CAAqBI,OAArB,CAA6BC,GAA7B,CAAkCC,MAAD,IAAoB;AACnE,WAAO;AACLC,MAAAA,EAAE,EAAED,MAAM,CAACC,EADN;AAELC,MAAAA,IAAI,EAAEF,MAAM,CAACE,IAFR;AAGLC,MAAAA,MAAM,EAAEH,MAAM,CAACG,MAHV;AAILC,MAAAA,UAAU,EAAE,IAAIC,IAAJ,CAASL,MAAM,CAACI,UAAhB,EAA4BE,kBAA5B,CAA+C,OAA/C,EAAwD;AAClEC,QAAAA,GAAG,EAAE,SAD6D;AAElEC,QAAAA,KAAK,EAAE,MAF2D;AAGlEC,QAAAA,IAAI,EAAE;AAH4D,OAAxD;AAJP,KAAP;AAUD,GAXe,CAAhB;AAaA,SAAO;AACLjB,IAAAA,aADK;AAELK,IAAAA,YAFK;AAGLC,IAAAA;AAHK,GAAP;AAKD;;AAED,OAAO,SAASY,MAAT,GAAkB;AACvB,SAAOvB,QAAQ,CAAC,KAAD,EAAQ,MAAME,MAAM,EAApB,EAAwB;AACrCsB,IAAAA,SAAS,EAAE;AAD0B,GAAxB,CAAf;AAGD","sourcesContent":["import { useQuery } from \"react-query\";\nimport { api } from \"../api\";\n\ntype Client = {\n  id: string;\n  name: string;\n  number: string;\n  created_at: string;\n};\n\ntype AllResponse = {\n  totalProducts: number;\n  totalClients: number;\n  clients: Client[];\n};\n\nasync function getAll(): Promise<AllResponse> {\n  let responseProducts = await api.get(`/products/1`);\n  let totalProducts = Number(responseProducts.data.total);\n\n  let responseClients = await api.get(`/clients/1`);\n  let totalClients = Number(responseClients.data.total);\n\n  const clients = responseClients.data.clients.map((client: Client) => {\n    return {\n      id: client.id,\n      name: client.name,\n      number: client.number,\n      created_at: new Date(client.created_at).toLocaleDateString(\"pt-BR\", {\n        day: \"2-digit\",\n        month: \"long\",\n        year: \"numeric\",\n      }),\n    };\n  });\n\n  return {\n    totalProducts,\n    totalClients,\n    clients,\n  };\n}\n\nexport function useAll() {\n  return useQuery(\"all\", () => getAll(), {\n    staleTime: 1000,\n  });\n}\n"]},"metadata":{},"sourceType":"module"}