{"ast":null,"code":"import _regeneratorRuntime from \"/home/smoke/\\xC1rea de Trabalho/dashgo/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _asyncToGenerator from \"/home/smoke/\\xC1rea de Trabalho/dashgo/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/smoke/\\xC1rea de Trabalho/dashgo/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _defineProperty from \"/home/smoke/\\xC1rea de Trabalho/dashgo/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Box, Flex, Heading, Divider, Textarea, Menu, MenuButton, MenuList, MenuItem, useToast } from \"@chakra-ui/react\";\nimport { HStack, Button } from \"@chakra-ui/react\";\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { Header } from \"../../components/Header\";\nimport { Sidebar } from \"../../components/Sidebar\";\nimport { api } from \"../../services/api\";\nimport { ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { useCategories } from \"../../services/hooks/useCategories\";\nvar categoryId;\n\nvar Cartao = function Cartao(number, month, year, cvv, category_id) {\n  _classCallCheck(this, Cartao);\n\n  _defineProperty(this, \"number\", void 0);\n\n  _defineProperty(this, \"month\", void 0);\n\n  _defineProperty(this, \"year\", void 0);\n\n  _defineProperty(this, \"cvv\", void 0);\n\n  _defineProperty(this, \"category_id\", void 0);\n\n  if (number === undefined || number.length <= 0 || month === undefined || month.length <= 0 || year === undefined || year.length <= 0 || cvv === undefined || cvv.length <= 0) {}\n\n  this.number = number;\n  this.month = month;\n  this.year = year;\n  this.cvv = cvv;\n  this.category_id = categoryId;\n};\n\nvar createUserSchema = yup.object().shape({\n  cards: yup.string().required(\"Cartões obrigatórios\")\n});\n\nfunction filter_array(CardList) {\n  var index = -1;\n  var arr_length = CardList ? CardList.length : 0;\n  var resIndex = -1;\n  var result = [];\n\n  while (++index < arr_length) {\n    var value = CardList[index];\n\n    if (value) {\n      result[++resIndex] = value;\n    }\n  }\n\n  return result;\n}\n\nfunction start(_x, _x2) {\n  return _start.apply(this, arguments);\n}\n\nfunction _start() {\n  _start = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(cardArray, toast) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            cardArray.forEach( /*#__PURE__*/function () {\n              var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dado, index) {\n                return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                          var number, month, year, cvv, response, responseIds, inserir, relation;\n                          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                            while (1) {\n                              switch (_context2.prev = _context2.next) {\n                                case 0:\n                                  number = String(dado).split(\"|\")[0];\n                                  month = String(dado).split(\"|\")[1];\n                                  year = String(dado).split(\"|\")[2];\n                                  cvv = String(dado).split(\"|\")[3];\n                                  _context2.next = 6;\n                                  return api.post(\"/products\", {\n                                    number: number,\n                                    month: month,\n                                    year: year,\n                                    cvv: cvv,\n                                    category_id: categoryId\n                                  });\n\n                                case 6:\n                                  response = _context2.sent;\n                                  _context2.next = 9;\n                                  return api.get(\"/products/1\");\n\n                                case 9:\n                                  responseIds = _context2.sent;\n                                  inserir = responseIds.data.productsIds;\n                                  inserir.push(String(response.data.id));\n                                  _context2.next = 14;\n                                  return api.post(\"/users/products\", {\n                                    products_id: inserir\n                                  });\n\n                                case 14:\n                                  relation = _context2.sent;\n                                  toast({\n                                    title: \"Cartão enviado com sucesso!\",\n                                    status: \"success\"\n                                  });\n\n                                case 16:\n                                case \"end\":\n                                  return _context2.stop();\n                              }\n                            }\n                          }, _callee2);\n                        })), 1000 * (index + 1));\n\n                      case 1:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              }));\n\n              return function (_x4, _x5) {\n                return _ref2.apply(this, arguments);\n              };\n            }());\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _start.apply(this, arguments);\n}\n\nexport default function CreateUser() {\n  var _useCategories = useCategories(),\n      data = _useCategories.data,\n      isLoading = _useCategories.isLoading,\n      isFetching = _useCategories.isFetching,\n      error = _useCategories.error;\n\n  var toast = useToast();\n\n  var _useForm = useForm({\n    resolver: yupResolver(createUserSchema)\n  }),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState;\n\n  var errors = formState.errors; //const handleCreateUser: SubmitHandler<CreateUserFormData) = (values) => {\n\n  function handleCreateCard(_x3) {\n    return _handleCreateCard.apply(this, arguments);\n  }\n\n  function _handleCreateCard() {\n    _handleCreateCard = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var cardList, cardArray;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              cardList = values.cards.replace(\"\\r\", \"\").split(\"\\n\");\n              cardArray = filter_array(cardList);\n              start(cardArray, toast); //router.push(\"/users\"); //volta para a listagem de usuários\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleCreateCard.apply(this, arguments);\n  }\n\n  var selectCategory;\n  return /*#__PURE__*/_jsxs(Box, {\n    children: [/*#__PURE__*/_jsx(Header, {}), /*#__PURE__*/_jsxs(Flex, {\n      w: \"100%\",\n      my: \"6\",\n      maxWidth: 1480,\n      mx: \"auto\",\n      px: \"6\",\n      children: [/*#__PURE__*/_jsx(Sidebar, {}), /*#__PURE__*/_jsxs(Box, {\n        as: \"form\",\n        flex: \"1\",\n        borderRadius: 8,\n        bg: \"gray.800\",\n        p: [\"4\", \"8\"],\n        onSubmit: handleSubmit(handleCreateCard),\n        children: [/*#__PURE__*/_jsxs(Flex, {\n          mb: \"8\",\n          justifyContent: \"space-between\",\n          align: \"center\",\n          children: [/*#__PURE__*/_jsx(Heading, {\n            size: \"lg\",\n            fontWeight: \"normal\",\n            children: \"Upload Cart\\xF5es\"\n          }), /*#__PURE__*/_jsx(Menu, {\n            children: function children(_ref) {\n              var isOpen = _ref.isOpen;\n              return /*#__PURE__*/_jsxs(_Fragment, {\n                children: [/*#__PURE__*/_jsx(MenuButton, {\n                  isActive: isOpen,\n                  as: Button,\n                  colorScheme: \"messenger\",\n                  rightIcon: /*#__PURE__*/_jsx(ChevronDownIcon, {}),\n                  children: isOpen ? \"Fechar\" : selectCategory ? selectCategory : \"Categoria\"\n                }), /*#__PURE__*/_jsx(MenuList, {\n                  children: data === null || data === void 0 ? void 0 : data.categories.map(function (category) {\n                    return /*#__PURE__*/_jsx(MenuItem, {\n                      color: \"black\",\n                      onClick: function onClick() {\n                        categoryId = category.id;\n                        selectCategory = category.name;\n                      },\n                      children: category.name\n                    }, category.id);\n                  })\n                })]\n              });\n            }\n          })]\n        }), /*#__PURE__*/_jsx(Divider, {\n          my: \"6\",\n          borderColor: \"gray.700\"\n        }), /*#__PURE__*/_jsx(Textarea, _objectSpread({\n          placeholder: \"4552250055368113|08|2023|113\",\n          h: \"400px\"\n        }, register(\"cards\"))), /*#__PURE__*/_jsx(Flex, {\n          mt: \"8\",\n          justify: \"flex-end\",\n          children: /*#__PURE__*/_jsxs(HStack, {\n            spacing: \"4\",\n            children: [/*#__PURE__*/_jsx(Button, {\n              as: \"a\",\n              colorScheme: \"whiteAlpha\",\n              href: \"/users\",\n              children: \"Cancelar\"\n            }), /*#__PURE__*/_jsx(Button, {\n              type: \"submit\",\n              isLoading: formState.isSubmitting,\n              colorScheme: \"messenger\",\n              children: \"Salvar\"\n            })]\n          })\n        })]\n      })]\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}