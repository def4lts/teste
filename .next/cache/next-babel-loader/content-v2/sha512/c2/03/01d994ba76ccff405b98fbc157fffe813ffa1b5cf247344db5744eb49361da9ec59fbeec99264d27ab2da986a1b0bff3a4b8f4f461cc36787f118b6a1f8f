{"ast":null,"code":"import _regeneratorRuntime from \"/home/smoke/\\xC1rea de Trabalho/dashgo/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/smoke/\\xC1rea de Trabalho/dashgo/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { useQuery } from \"react-query\";\nimport { api } from \"../api\";\n\nfunction getAll() {\n  return _getAll.apply(this, arguments);\n}\n\nfunction _getAll() {\n  _getAll = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var responseProducts, totalProducts, responseClients, totalClients, responsePurchases, totalPurchases, clients, purchases, clientsSlice, purchasesSlice;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return api.get(\"/products/1\");\n\n          case 2:\n            responseProducts = _context.sent;\n            totalProducts = Number(responseProducts.data.total);\n            _context.next = 6;\n            return api.get(\"/clients/1\");\n\n          case 6:\n            responseClients = _context.sent;\n            totalClients = Number(responseClients.data.total);\n            _context.next = 10;\n            return api.get(\"/purchases/1\");\n\n          case 10:\n            responsePurchases = _context.sent;\n            totalPurchases = Number(responsePurchases.data.total);\n            clients = responseClients.data.clients.map(function (client) {\n              return {\n                id: client.id,\n                name: client.name,\n                number: client.number,\n                created_at: new Date(client.created_at).toLocaleDateString(\"pt-BR\", {\n                  day: \"2-digit\",\n                  month: \"long\",\n                  year: \"numeric\"\n                })\n              };\n            });\n            purchases = responsePurchases.data.purchases.map(function (purchase) {\n              return {\n                id: purchase.id,\n                product_id: purchase.product_id,\n                price: purchase.price,\n                created_at: new Date(purchase.created_at).toLocaleDateString(\"pt-BR\", {\n                  day: \"2-digit\",\n                  month: \"long\",\n                  year: \"numeric\"\n                })\n              };\n            });\n            clientsSlice = clients.slice(0, 5);\n            purchasesSlice = purchases.slice(0, 5);\n            return _context.abrupt(\"return\", {\n              totalProducts: totalProducts,\n              totalClients: totalClients,\n              totalPurchases: totalPurchases,\n              clientsSlice: clientsSlice,\n              purchasesSlice: purchasesSlice\n            });\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getAll.apply(this, arguments);\n}\n\nexport function useAll() {\n  return useQuery(\"all\", function () {\n    return getAll();\n  }, {\n    staleTime: 1000\n  });\n}","map":null,"metadata":{},"sourceType":"module"}