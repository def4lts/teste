{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/smoke/\\xC1rea de Trabalho/dashgo/src/contexts/SidebarDrawerContext.tsx\";\nimport { createContext, useContext, useEffect } from 'react';\nimport { useDisclosure } from '@chakra-ui/react';\nimport { useRouter } from 'next/router';\nconst SidebarDrawerContext = /*#__PURE__*/createContext({});\nexport function SidebarDrawerProvider({\n  children\n}) {\n  const disclosure = useDisclosure();\n  const router = useRouter();\n  useEffect(() => {\n    // Toda vez que mudar o caminho da rota, fecha a sidebar\n    disclosure.onClose();\n  }, [router.asPath]);\n  return /*#__PURE__*/_jsxDEV(SidebarDrawerContext.Provider, {\n    value: disclosure,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\nexport const useSidebarDrawer = () => useContext(SidebarDrawerContext);","map":{"version":3,"sources":["/home/smoke/Área de Trabalho/dashgo/src/contexts/SidebarDrawerContext.tsx"],"names":["createContext","useContext","useEffect","useDisclosure","useRouter","SidebarDrawerContext","SidebarDrawerProvider","children","disclosure","router","onClose","asPath","useSidebarDrawer"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAA+CC,SAA/C,QAAgE,OAAhE;AACA,SAASC,aAAT,QAAmD,kBAAnD;AACA,SAASC,SAAT,QAA0B,aAA1B;AAQA,MAAMC,oBAAoB,gBAAGL,aAAa,CAAC,EAAD,CAA1C;AAEA,OAAO,SAASM,qBAAT,CAA+B;AAAEC,EAAAA;AAAF,CAA/B,EAAyE;AAC5E,QAAMC,UAAU,GAAGL,aAAa,EAAhC;AACA,QAAMM,MAAM,GAAGL,SAAS,EAAxB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAM,IAAAA,UAAU,CAACE,OAAX;AACH,GAHQ,EAGN,CAACD,MAAM,CAACE,MAAR,CAHM,CAAT;AAKA,sBACI,QAAC,oBAAD,CAAsB,QAAtB;AAA+B,IAAA,KAAK,EAAEH,UAAtC;AAAA,cACKD;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;AAED,OAAO,MAAMK,gBAAgB,GAAG,MAAMX,UAAU,CAACI,oBAAD,CAAzC","sourcesContent":["import { createContext, useContext, ReactNode, useEffect } from 'react'\nimport { useDisclosure, UseDisclosureReturn } from '@chakra-ui/react'\nimport { useRouter } from 'next/router'\n\ntype SidebarDrawerProviderProps = {\n    children: ReactNode;\n}\n\ntype SidebarDrawerContextData = UseDisclosureReturn\n\nconst SidebarDrawerContext = createContext({} as SidebarDrawerContextData)\n\nexport function SidebarDrawerProvider({ children }: SidebarDrawerProviderProps) {\n    const disclosure = useDisclosure()\n    const router = useRouter()\n\n    useEffect(() => {\n        // Toda vez que mudar o caminho da rota, fecha a sidebar\n        disclosure.onClose()\n    }, [router.asPath]) \n    \n    return (\n        <SidebarDrawerContext.Provider value={disclosure}>\n            {children}\n        </SidebarDrawerContext.Provider>\n    )\n}\n\nexport const useSidebarDrawer = () => useContext(SidebarDrawerContext)\n"]},"metadata":{},"sourceType":"module"}